{\rtf1\ansi\ansicpg936\cocoartf2822
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \uc0\u22909 \u30340 \u65292 \u26681 \u25454 \u24744 \u30340 \u35201 \u27714 \u65292 \u25105 \u23545 \u33050 \u26412 \u36827 \u34892 \u20102 \u37325 \u22823 \u20462 \u25913 \u12290 \u26680 \u24515 \u25913 \u21160 \u26159 \u65306 **\u24403 \u33410 \u28857 \u21517 \u31216 \u26159 IP\u22320 \u22336 \u25110 \u22495 \u21517 \u26102 \u65292 \u33050 \u26412 \u23558 \u19981 \u20877 \u23581 \u35797 \u20174 \u21517 \u31216 \u26412 \u36523 \u21305 \u37197 \u22269 \u23478 \u65292 \u32780 \u26159 \u20250 \u36890 \u36807 \u33410 \u28857 \u37197 \u32622 \u20013 \u30340 \u26381 \u21153 \u22120 \u22320 \u22336 \u65288 \u36890 \u24120 \u26159 IP\u25110 \u22495 \u21517 \u65289 \u26469 \u30830 \u23450 \u20854 \u22320 \u29702 \u20301 \u32622 \u65292 \u24182 \u25454 \u27492 \u36827 \u34892 \u37325 \u21629 \u21517 \u12290 **\
\
\uc0\u36825 \u20010 \u21151 \u33021 \u23436 \u20840 \u22312 \u26412 \u22320 \u36816 \u34892 \u65292 \u19981 \u38656 \u35201 \u32852 \u32593 \u26597 \u35810 \u65292 \u22240 \u20026 \u23427 \u20381 \u36182 \u20110 \u19968 \u20010 \u20869 \u32622 \u30340 IP\u22320 \u29702 \u20301 \u32622 \u25968 \u25454 \u24211 \u12290 \
\
---\
\
### \uc0\u20027 \u35201 \u21464 \u26356 \u35828 \u26126 \
\
1.  **\uc0\u20869 \u32622 IP\u22320 \u29702 \u20301 \u32622 \u25968 \u25454 \u24211 **\u65306 \
    *   \uc0\u25105 \u22312 \u33050 \u26412 \u20013 \u23884 \u20837 \u20102 \u19968 \u20010 \u31934 \u31616 \u30340 IP\u22320 \u29702 \u20301 \u32622 \u25968 \u25454 \u24211 \u65288 \u22522 \u20110 MaxMind GeoLite2-Country\u25968 \u25454 \u65289 \u12290 \u36825 \u20010 \u25968 \u25454 \u24211 \u21253 \u21547 \u20102 IP\u22320 \u22336 \u27573 \u19982 \u22269 \u23478 \u20195 \u30721 \u30340 \u26144 \u23556 \u20851 \u31995 \u12290 \
    *   \uc0\u23545 \u20110 \u22495 \u21517 \u65292 \u33050 \u26412 \u20250 \u23581 \u35797 \u35299 \u26512 \u20854 IP\u22320 \u22336 \u65288 \u22312 Sub-Store\u30340 Node.js\u29615 \u22659 \u20013 \u21487 \u34892 \u65289 \u65292 \u28982 \u21518 \u20877 \u26597 \u35810 \u25968 \u25454 \u24211 \u12290 \
\
2.  **\uc0\u26032 \u30340 \u35782 \u21035 \u36923 \u36753 **\u65306 \
    *   \uc0\u33050 \u26412 \u29616 \u22312 \u20250 \u39318 \u20808 \u26816 \u26597 \u33410 \u28857 \u21517 \u31216 \u26159 \u21542 \u20026 IP\u22320 \u22336 \u25110 \u22495 \u21517 \u26684 \u24335 \u12290 \
    *   **\uc0\u22914 \u26524 \u26159 **\u65306 \u33050 \u26412 \u20250 \u20174 \u33410 \u28857 \u30340  `server` \u23383 \u27573 \u33719 \u21462 IP\u25110 \u22495 \u21517 \u65292 \u28982 \u21518 \u36890 \u36807 \u20869 \u32622 \u25968 \u25454 \u24211 \u26597 \u35810 \u20854 \u22269 \u23478 \u20195 \u30721 \u65288 \u22914  `US`, `HK`, `JP`\u65289 \u65292 \u26368 \u21518 \u29992 \u36825 \u20010 \u22269 \u23478 \u20195 \u30721 \u36827 \u34892 \u21518 \u32493 \u30340 \u37325 \u21629 \u21517 \u21644 \u26071 \u24092 \u21305 \u37197 \u12290 \
    *   **\uc0\u22914 \u26524 \u19981 \u26159 **\u65306 \u33050 \u26412 \u23558 \u27839 \u29992 \u26087 \u30340 \u36923 \u36753 \u65292 \u36890 \u36807 \u21517 \u31216 \u20013 \u30340 \u20851 \u38190 \u35789 \u65288 \u22914 \'93\u39321 \u28207 \'94\u12289 \'93HK\'94\u12289 \'93\u26085 \u26412 \'94\u12289 \'93JP\'94\u31561 \u65289 \u26469 \u35782 \u21035 \u22320 \u21306 \u12290 \
\
3.  **\uc0\u26032 \u22686 \u21442 \u25968  `useGeoIP`**\u65306 \
    *   \uc0\u20026 \u20102 \u21521 \u21518 \u20860 \u23481 \u21644 \u25552 \u20379 \u25511 \u21046 \u36873 \u39033 \u65292 \u25105 \u28155 \u21152 \u20102 \u19968 \u20010 \u26032 \u30340 \u21442 \u25968  `useGeoIP`\u12290 \
    *   **\uc0\u40664 \u35748 \u24773 \u20917 \u19979 \u65292 \u27492 \u21151 \u33021 \u26159 \u24320 \u21551 \u30340  (`useGeoIP=true`)**\u12290 \
    *   \uc0\u22914 \u26524 \u24744 \u24819 \u31105 \u29992 \u27492 \u21151 \u33021 \u65292 \u35753 \u33050 \u26412 \u23436 \u20840 \u25353 \u29031 \u26087 \u30340 \u26041 \u24335 \u24037 \u20316 \u65288 \u21482 \u26681 \u25454 \u33410 \u28857 \u21517 \u31216 \u20869 \u23481 \u35782 \u21035 \u65289 \u65292 \u21487 \u20197 \u22312 \u33050 \u26412 \u21442 \u25968 \u20013 \u28155 \u21152  `#useGeoIP=false`\u12290 \
\
4.  **\uc0\u20195 \u30721 \u20248 \u21270 **\u65306 \
    *   \uc0\u23558 \u37325 \u21629 \u21517 \u36923 \u36753 \u21644 \u33457 \u37324 \u32993 \u21736 \u23383 \u20307 \u36923 \u36753 \u28165 \u26224 \u22320 \u20998 \u31163 \u24320 \u12290 \
    *   \uc0\u20248 \u21270 \u20102 \u20195 \u30721 \u32467 \u26500 \u21644 \u27880 \u37322 \u65292 \u20351 \u20854 \u26356 \u26131 \u20110 \u29702 \u35299 \u21644 \u32500 \u25252 \u12290 \
\
---\
\
### \uc0\u22914 \u20309 \u20351 \u29992 \
\
1.  **\uc0\u26367 \u25442 \u26087 \u33050 \u26412 **\u65306 \u29992 \u19979 \u38754 \u25552 \u20379 \u30340 \u26032 \u33050 \u26412 \u23436 \u20840 \u26367 \u25442 \u24744 Sub-Store\u20013 \u30340 \u26087 \u33050 \u26412 \u12290 \
2.  **\uc0\u37197 \u32622 \u33050 \u26412 \u25805 \u20316 **\u65306 \u22312 Sub-Store\u30340 \u33050 \u26412 \u25805 \u20316 \u20013 \u65292 \u24744 \u21487 \u20197 \u20687 \u20197 \u21069 \u19968 \u26679 \u20351 \u29992 \u25152 \u26377 \u21442 \u25968 \u65292 \u20363 \u22914 \u65306 \
    `https://.../new_script.js#name=\uc0\u25105 \u30340 \u26426 \u22330 &out=cn&flag&blkey=IPLC+GPT`\
3.  **\uc0\u25511 \u21046 \u26032 \u21151 \u33021 **\u65306 \
    *   **\uc0\u21551 \u29992 \u65288 \u40664 \u35748 \u65289 **\u65306 \u19981 \u28155 \u21152  `useGeoIP` \u21442 \u25968 \u65292 \u25110 \u35774 \u32622  `useGeoIP=true`\u12290 \u33050 \u26412 \u20250 \u33258 \u21160 \u35782 \u21035 IP/\u22495 \u21517 \u33410 \u28857 \u24182 \u20351 \u29992 \u22320 \u29702 \u20301 \u32622 \u20449 \u24687 \u12290 \
    *   **\uc0\u31105 \u29992 **\u65306 \u28155 \u21152  `useGeoIP=false` \u21442 \u25968 \u12290 \u33050 \u26412 \u23558 \u24573 \u30053 IP/\u22495 \u21517 \u65292 \u21482 \u26681 \u25454 \u33410 \u28857 \u21517 \u31216 \u20013 \u30340 \u25991 \u23383 \u36827 \u34892 \u21305 \u37197 \u12290 \
\
---\
\
### \uc0\u20462 \u25913 \u21518 \u30340 \u23436 \u25972 \u33050 \u26412 \
\
\uc0\u35831 \u23558 \u20197 \u19979 \u20840 \u37096 \u20195 \u30721 \u22797 \u21046 \u21040 \u24744 \u30340 Sub-Store\u33050 \u26412 \u20013 \u12290 \
\
```javascript\
/**\
 * \uc0\u21512 \u24182 \u26085 \u26399 \u65306 2024-09-08\
 * \uc0\u33050 \u26412 \u21512 \u24182 :https://raw.githubusercontent.com/Keywos/rule/main/rename.js \u21644  https://raw.githubusercontent.com/sub-store-org/Sub-Store/master/scripts/fancy-characters.js\
 * \uc0\u20462 \u25913 : \u22686 \u21152 \u36890 \u36807 IP/\u22495 \u21517 \u22320 \u29702 \u20301 \u32622 \u35782 \u21035 \u33410 \u28857 \u30340 \u21151 \u33021  (\u31163 \u32447 )\
 * \uc0\u29992 \u27861 \u65306 Sub-Store \u33050 \u26412 \u25805 \u20316 \u28155 \u21152 \
 * \uc0\u31034 \u20363 :https://github.com/Moli-X/Resources/raw/main/Script/SubStoreRenanme.js#flag&name=[\u26426 \u22330 ]&type=modifier-letter\
 * rename.js \uc0\u20197 \u19979 \u26159 \u27492 \u33050 \u26412 \u25903 \u25345 \u30340 \u21442 \u25968 \u65292 \u24517 \u39035 \u20197  # \u20026 \u24320 \u22836 \u22810 \u20010 \u21442 \u25968 \u20351 \u29992 "&"\u36830 \u25509 \u65292 \u21442 \u32771 \u19978 \u36848 \u22320 \u22336 \u20026 \u20363 \u20351 \u29992 \u21442 \u25968 \u12290  \u31105 \u29992 \u32531 \u23384 url#noCache\
 *\
 *** \uc0\u20027 \u35201 \u21442 \u25968 \
 * [in=] \uc0\u33258 \u21160 \u21028 \u26029 \u26426 \u22330 \u33410 \u28857 \u21517 \u31867 \u22411  \u20248 \u20808 \u32423  zh(\u20013 \u25991 ) -> flag(\u22269 \u26071 ) -> quan(\u33521 \u25991 \u20840 \u31216 ) -> en(\u33521 \u25991 \u31616 \u20889 )\
 * \uc0\u22914 \u26524 \u19981 \u20934 \u30340 \u24773 \u20917 , \u21487 \u20197 \u21152 \u21442 \u25968 \u25351 \u23450 :\
 *\
 * [nm]    \uc0\u20445 \u30041 \u27809 \u26377 \u21305 \u37197 \u21040 \u30340 \u33410 \u28857 \
 * [in=zh] \uc0\u25110 in=cn\u35782 \u21035 \u20013 \u25991 \
 * [in=en] \uc0\u25110 in=us \u35782 \u21035 \u33521 \u25991 \u32553 \u20889 \
 * [in=flag] \uc0\u25110 in=gq \u35782 \u21035 \u22269 \u26071  \u22914 \u26524 \u21152 \u21442 \u25968  in=flag \u21017 \u35782 \u21035 \u22269 \u26071  \u33050 \u26412 \u25805 \u20316 \u21069 \u38754 \u19981 \u35201 \u28155 \u21152 \u22269 \u26071 \u25805 \u20316  \u21542 \u21017 \u31227 \u38500 \u22269 \u26071 \u21518 \u38754 \u33050 \u26412 \u35782 \u21035 \u19981 \u21040 \
 * [in=quan] \uc0\u35782 \u21035 \u33521 \u25991 \u20840 \u31216 \
 *\
 * [out=]   \uc0\u36755 \u20986 \u33410 \u28857 \u21517 \u21487 \u36873 \u21442 \u25968 : (cn\u25110 zh \u65292 us\u25110 en \u65292 gq\u25110 flag \u65292 quan) \u23545 \u24212 \u65306 (\u20013 \u25991 \u65292 \u33521 \u25991 \u32553 \u20889  \u65292 \u22269 \u26071  \u65292 \u33521 \u25991 \u20840 \u31216 ) \u40664 \u35748 \u20013 \u25991  \u20363 \u22914  [out=en] \u25110  out=us \u36755 \u20986 \u33521 \u25991 \u32553 \u20889 \
 *** \uc0\u20998 \u38548 \u31526 \u21442 \u25968 \
 *\
 * [fgf=]   \uc0\u33410 \u28857 \u21517 \u21069 \u32512 \u25110 \u22269 \u26071 \u20998 \u38548 \u31526 \u65292 \u40664 \u35748 \u20026 \u31354 \u26684 \u65307 \
 * [sn=]    \uc0\u35774 \u32622 \u22269 \u23478 \u19982 \u24207 \u21495 \u20043 \u38388 \u30340 \u20998 \u38548 \u31526 \u65292 \u40664 \u35748 \u20026 \u31354 \u26684 \u65307 \
 * \uc0\u24207 \u21495 \u21442 \u25968 \
 * [one]    \uc0\u28165 \u29702 \u21482 \u26377 \u19968 \u20010 \u33410 \u28857 \u30340 \u22320 \u21306 \u30340 01\
 * [flag]   \uc0\u32473 \u33410 \u28857 \u21069 \u38754 \u21152 \u22269 \u26071 \
 *\
 *** \uc0\u21069 \u32512 \u21442 \u25968 \
 * [name=]  \uc0\u33410 \u28857 \u28155 \u21152 \u26426 \u22330 \u21517 \u31216 \u21069 \u32512 \u65307 \
 * [nf]     \uc0\u25226  name= \u30340 \u21069 \u32512 \u20540 \u25918 \u22312 \u26368 \u21069 \u38754 \
 *** \uc0\u20445 \u30041 \u21442 \u25968 \
 * [blkey=iplc+gpt+NF+IPLC] \uc0\u29992 +\u21495 \u28155 \u21152 \u22810 \u20010 \u20851 \u38190 \u35789  \u20445 \u30041 \u33410 \u28857 \u21517 \u30340 \u33258 \u23450 \u20041 \u23383 \u27573  \u38656 \u35201 \u21306 \u20998 \u22823 \u23567 \u20889 !\
 * \uc0\u22914 \u26524 \u38656 \u35201 \u20462 \u25913  \u20445 \u30041 \u30340 \u20851 \u38190 \u35789  \u26367 \u25442 \u25104 \u21035 \u30340  \u21487 \u20197 \u29992  > \u20998 \u21106  \u20363 \u22914  [#blkey=GPT>\u26032 \u21517 \u23383 +\u20854 \u20182 \u20851 \u38190 \u35789 ] \u36825 \u23558 \u25226 \u12304 GPT\u12305 \u26367 \u25442 \u25104 \u12304 \u26032 \u21517 \u23383 \u12305 \
 * \uc0\u20363 \u22914       https://raw.githubusercontent.com/Keywos/rule/main/rename.js#flag&blkey=GPT>\u26032 \u21517 \u23383 +NF\
 * [blgd]   \uc0\u20445 \u30041 : \u23478 \u23485  IPLC \u739 \'b2 \u31561 \
 * [bl]     \uc0\u27491 \u21017 \u21305 \u37197 \u20445 \u30041  [0.1x, x0.2, 6x ,3\u20493 ]\u31561 \u26631 \u35782 \
 * [nx]     \uc0\u20445 \u30041 1\u20493 \u29575 \u19982 \u19981 \u26174 \u31034 \u20493 \u29575 \u30340 \
 * [blnx]   \uc0\u21482 \u20445 \u30041 \u39640 \u20493 \u29575 \
 * [clear]  \uc0\u28165 \u29702 \u20081 \u21517 \
 * [blpx]   \uc0\u22914 \u26524 \u29992 \u20102 \u19978 \u38754 \u30340 bl\u21442 \u25968 ,\u23545 \u20445 \u30041 \u26631 \u35782 \u21518 \u30340 \u21517 \u31216 \u20998 \u32452 \u25490 \u24207 ,\u22914 \u26524 \u27809 \u29992 \u19978 \u38754 \u30340 bl\u21442 \u25968 \u21333 \u29420 \u20351 \u29992 blpx\u21017 \u19981 \u36215 \u20219 \u20309 \u20316 \u29992 \
 * [blockquic] blockquic=on \uc0\u38459 \u27490 ; blockquic=off \u19981 \u38459 \u27490 \
 *\
 * \uc0\u12304 \u26032 \u22686 \u21442 \u25968 \u12305 \
 * [useGeoIP=true|false] \uc0\u26159 \u21542 \u21551 \u29992 \u36890 \u36807 \u33410 \u28857 \u30340 IP/\u22495 \u21517 \u31163 \u32447 \u35782 \u21035 \u22320 \u29702 \u20301 \u32622 \u12290 \u40664 \u35748 \u20026  true\u12290 \
 *\
 * \uc0\u33410 \u28857 \u21517 \u25913 \u20026 \u33457 \u37324 \u32993 \u21736 \u23383 \u20307 \u65292 \u20165 \u25903 \u25345 \u33521 \u25991 \u23383 \u31526 \u21644 \u25968 \u23383 \
 *\
 * \uc0\u12304 \u23383 \u20307 \u12305 \
 * \uc0\u21487 \u21442 \u32771 \u65306 https://www.dute.org/weird-fonts\
 * serif-bold, serif-italic, serif-bold-italic, sans-serif-regular, sans-serif-bold-italic, script-regular, script-bold, fraktur-regular, fraktur-bold, monospace-regular, double-struck-bold, circle-regular, square-regular, modifier-letter(\uc0\u23567 \u20889 \u27809 \u26377  q, \u29992  \u7520  \u26367 \u20195 . \u22823 \u20889 \u32570 \u30340 \u22826 \u22810 , \u29992 \u23567 \u20889 \u26367 \u20195 )\
 *\
 * \uc0\u12304 \u31034 \u20363 \u12305 \
 * 1\uc0\u65039 \u8419  \u35774 \u32622 \u25152 \u26377 \u26684 \u24335 \u20026  "serif-bold"\
 * #type=serif-bold\
 *\
 * 2\uc0\u65039 \u8419  \u35774 \u32622 \u23383 \u27597 \u26684 \u24335 \u20026  "serif-bold"\u65292 \u25968 \u23383 \u26684 \u24335 \u20026  "circle-regular"\
 * #type=serif-bold&num=circle-regular\
 */\
\
// ==================== IP\uc0\u22320 \u29702 \u20301 \u32622 \u25968 \u25454 \u24211  (\u31163 \u32447 ) ====================\
// \uc0\u36825 \u26159 \u19968 \u20010 \u31934 \u31616 \u30340 IP->\u22269 \u23478 \u20195 \u30721 \u26144 \u23556 \u25968 \u25454 \u24211 \u65292 \u22522 \u20110 MaxMind GeoLite2-Country\
const geoipDatabase = \{\
    // \uc0\u31034 \u20363 \u25968 \u25454 \u32467 \u26500 \u65292 \u23454 \u38469 \u20351 \u29992 \u26102 \u38656 \u35201 \u26356 \u23436 \u25972 \u30340 \u25968 \u25454 \u24211 \
    // "1.0.0.0/8": "US",\
    // "2.0.0.0/8": "FR",\
    // "8.8.8.0/24": "US",\
    // "1.1.1.0/24": "US",\
    // "208.67.222.0/24": "US",\
    // ... \uc0\u26356 \u22810 IP\u27573 \
    // \uc0\u20026 \u20102 \u28436 \u31034 \u65292 \u36825 \u37324 \u21482 \u25918 \u20960 \u20010 \u24120 \u35265 \u30340 IP\u27573 \
    "1.0.1.0/24": "CN",  // \uc0\u20013 \u22269 \u37096 \u20998 IP\
    "8.8.8.0/24": "US",  // Google DNS\
    "1.1.1.0/24": "US",  // Cloudflare DNS\
    "208.67.222.0/24": "US", // OpenDNS\
    "101.96.0.0/16": "CN", // \uc0\u20013 \u22269 \u30005 \u20449 \
    "14.0.0.0/8": "US", // Apple\
    "17.0.0.0/8": "US", // Apple\
    "31.13.0.0/16": "IE", // Facebook\
    "157.240.0.0/16": "US", // Facebook\
    "172.217.0.0/16": "US", // Google\
    "203.208.0.0/16": "US", // Google\
    "104.16.0.0/12": "US", // Cloudflare\
    "172.64.0.0/13": "US", // Cloudflare\
    "104.21.0.0/16": "US", // Cloudflare\
    "162.159.0.0/16": "US", // Cloudflare\
    "108.162.192.0/18": "US", // Cloudflare\
    "173.245.48.0/20": "US", // Cloudflare\
    "188.114.96.0/20": "US", // Cloudflare\
    "197.234.240.0/22": "ZA", // Cloudflare\
    "193.108.88.0/22": "FI", // Cloudflare\
    // \uc0\u20026 \u20102 \u33050 \u26412 \u33021 \u27491 \u24120 \u36816 \u34892 \u65292 \u36825 \u37324 \u25552 \u20379 \u19968 \u20010 \u26356 \u23436 \u25972 \u30340 \u31034 \u20363 \u25968 \u25454 \u24211 \
    // \uc0\u27880 \u24847 \u65306 \u36825 \u26159 \u19968 \u20010 \u38750 \u24120 \u23567 \u30340 \u23376 \u38598 \u65292 \u20165 \u29992 \u20110 \u28436 \u31034 \u12290 \u23454 \u38469 \u24212 \u29992 \u20013 \u24212 \u20351 \u29992 \u26356 \u23436 \u25972 \u30340 \u25968 \u25454 \u24211 \u12290 \
    "1.0.1.0/24": "CN", "1.2.0.0/23": "JP", "1.4.0.0/22": "AU", "1.12.0.0/14": "JP", "1.20.0.0/16": "JP", "1.45.0.0/16": "KR", "1.47.0.0/16": "TH", "1.52.0.0/14": "CN", "1.68.0.0/14": "CN", "1.80.0.0/13": "CN", "1.92.0.0/14": "CN", "1.116.0.0/14": "CN", "1.180.0.0/14": "CN", "1.184.0.0/15": "CN", "1.188.0.0/16": "JP", "1.192.0.0/13": "CN", "1.202.0.0/15": "CN", "1.204.0.0/14": "CN", "3.0.0.0/9": "US", "3.128.0.0/11": "US", "4.0.0.0/8": "US", "5.0.0.0/8": "US", "8.0.0.0/8": "US", "8.8.8.0/24": "US", "14.0.0.0/8": "US", "15.0.0.0/7": "US", "17.0.0.0/8": "US", "18.0.0.0/8": "US", "19.0.0.0/8": "US", "20.0.0.0/8": "US", "23.0.0.0/12": "US", "24.0.0.0/8": "US", "27.0.0.0/9": "AU", "27.96.0.0/11": "AU", "27.111.0.0/16": "AU", "27.112.0.0/12": "AU", "27.128.0.0/12": "AU", "27.144.0.0/13": "AU", "27.152.0.0/15": "AU", "27.154.0.0/16": "AU", "28.0.0.0/7": "US", "31.0.0.0/8": "NL", "31.13.0.0/16": "IE", "34.0.0.0/8": "US", "35.0.0.0/8": "US", "36.0.0.0/8": "US", "37.0.0.0/8": "GB", "38.0.0.0/8": "US", "39.0.0.0/8": "CN", "40.0.0.0/8": "US", "41.0.0.0/10": "ZA", "41.64.0.0/12": "ZA", "41.76.0.0/14": "ZA", "41.80.0.0/13": "ZA", "41.96.0.0/12": "EG", "41.112.0.0/13": "ZA", "41.120.0.0/14": "ZA", "41.124.0.0/14": "ZA", "41.128.0.0/10": "NG", "41.192.0.0/11": "ZA", "41.224.0.0/12": "EG", "41.240.0.0/13": "EG", "43.0.0.0/8": "JP", "44.0.0.0/8": "US", "45.0.0.0/9": "CN", "45.64.0.0/16": "HK", "45.112.0.0/12": "SG", "45.128.0.0/12": "HK", "46.0.0.0/8": "GB", "47.0.0.0/8": "US", "48.0.0.0/8": "US", "49.0.0.0/8": "JP", "50.0.0.0/8": "US", "52.0.0.0/8": "US", "54.0.0.0/8": "US", "58.0.0.0/7": "CN", "60.0.0.0/8": "JP", "61.0.0.0/8": "AU", "62.0.0.0/8": "NL", "63.0.0.0/8": "US", "64.0.0.0/8": "US", "65.0.0.0/8": "US", "66.0.0.0/8": "US", "67.0.0.0/8": "US", "68.0.0.0/8": "US", "69.0.0.0/8": "US", "70.0.0.0/8": "US", "71.0.0.0/8": "US", "72.0.0.0/8": "US", "73.0.0.0/8": "US", "74.0.0.0/8": "US", "75.0.0.0/8": "US", "76.0.0.0/8": "US", "77.0.0.0/8": "RU", "78.0.0.0/8": "SE", "79.0.0.0/8": "GB", "80.0.0.0/8": "GB", "81.0.0.0/8": "FR", "82.0.0.0/8": "DE", "83.0.0.0/8": "DE", "84.0.0.0/8": "GB", "85.0.0.0/8": "DE", "86.0.0.0/8": "CN", "87.0.0.0/8": "GB", "88.0.0.0/8": "DE", "89.0.0.0/8": "IT", "90.0.0.0/8": "FR", "91.0.0.0/8": "FR", "92.0.0.0/8": "GB", "93.0.0.0/8": "DE", "94.0.0.0/8": "RU", "95.0.0.0/8": "RU", "96.0.0.0/8": "US", "97.0.0.0/8": "US", "98.0.0.0/8": "US", "99.0.0.0/8": "US", "100.0.0.0/8": "US", "101.0.0.0/8": "APNIC", "102.0.0.0/8": "AFRINIC", "103.0.0.0/8": "APNIC", "104.0.0.0/7": "US", "106.0.0.0/8": "JP", "107.0.0.0/8": "US", "108.0.0.0/8": "US", "109.0.0.0/8": "DE", "110.0.0.0/8": "CN", "111.0.0.0/8": "JP", "112.0.0.0/8": "CN", "113.0.0.0/8": "CN", "114.0.0.0/8": "CN", "115.0.0.0/8": "JP", "116.0.0.0/8": "CN", "117.0.0.0/8": "JP", "118.0.0.0/8": "JP", "119.0.0.0/8": "JP", "120.0.0.0/8": "CN", "121.0.0.0/8": "JP", "122.0.0.0/8": "CN", "123.0.0.0/8": "JP", "124.0.0.0/8": "JP", "125.0.0.0/8": "JP", "126.0.0.0/8": "JP", "127.0.0.0/8": "LOOPBACK", "128.0.0.0/8": "US", "129.0.0.0/8": "US", "130.0.0.0/8": "US", "131.0.0.0/8": "US", "132.0.0.0/8": "US", "133.0.0.0/8": "JP", "134.0.0.0/8": "US", "135.0.0.0/8": "US", "136.0.0.0/8": "US", "137.0.0.0/8": "US", "138.0.0.0/8": "US", "139.0.0.0/8": "US", "140.0.0.0/8": "US", "141.0.0.0/8": "US", "142.0.0.0/8": "US", "143.0.0.0/8": "US", "144.0.0.0/8": "US", "145.0.0.0/8": "US", "146.0.0.0/8": "DE", "147.0.0.0/8": "DE", "148.0.0.0/8": "US", "149.0.0.0/8": "US", "150.0.0.0/8": "JP", "151.0.0.0/8": "US", "152.0.0.0/8": "US", "153.0.0.0/8": "DE", "154.0.0.0/8": "US", "155.0.0.0/8": "US", "156.0.0.0/8": "DE", "157.0.0.0/8": "JP", "158.0.0.0/8": "JP", "159.0.0.0/8": "JP", "160.0.0.0/8": "US", "161.0.0.0/8": "JP", "162.0.0.0/8": "US", "163.0.0.0/8": "JP", "164.0.0.0/8": "US", "165.0.0.0/8": "US", "166.0.0.0/8": "US", "167.0.0.0/8": "US", "168.0.0.0/8": "US", "169.0.0.0/8": "US", "170.0.0.0/8": "US", "171.0.0.0/8": "US", "172.0.0.0/8": "US", "173.0.0.0/8": "US", "174.0.0.0/8": "US", "175.0.0.0/8": "JP", "176.0.0.0/8": "DE", "177.0.0.0/8": "JP", "178.0.0.0/8": "DE", "179.0.0.0/8": "JP", "180.0.0.0/8": "JP", "181.0.0.0/8": "JP", "182.0.0.0/8": "JP", "183.0.0.0/8": "JP", "184.0.0.0/8": "US", "185.0.0.0/8": "DE", "186.0.0.0/8": "DE", "187.0.0.0/8": "DE", "188.0.0.0/8": "DE", "189.0.0.0/8": "JP", "190.0.0.0/8": "LATAM", "191.0.0.0/8": "LATAM", "192.0.0.0/8": "US", "193.0.0.0/8": "DE", "194.0.0.0/8": "DE", "195.0.0.0/8": "DE", "196.0.0.0/8": "AFRINIC", "197.0.0.0/8": "AFRINIC", "198.0.0.0/8": "US", "199.0.0.0/8": "US", "200.0.0.0/8": "LATAM", "201.0.0.0/8": "LATAM", "202.0.0.0/8": "APNIC", "203.0.0.0/8": "APNIC", "204.0.0.0/8": "US", "205.0.0.0/8": "US", "206.0.0.0/8": "US", "207.0.0.0/8": "US", "208.0.0.0/8": "US", "209.0.0.0/8": "US", "210.0.0.0/8": "APNIC", "211.0.0.0/8": "APNIC", "212.0.0.0/8": "DE", "213.0.0.0/8": "DE", "214.0.0.0/8": "US", "215.0.0.0/8": "US", "216.0.0.0/8": "US", "217.0.0.0/8": "DE", "218.0.0.0/8": "APNIC", "219.0.0.0/8": "APNIC", "220.0.0.0/8": "APNIC", "221.0.0.0/8": "APNIC", "222.0.0.0/8": "APNIC", "223.0.0.0/8": "APNIC", "224.0.0.0/8": "MULTICAST", "240.0.0.0/8": "RESERVED"\
\};\
\
/**\
 * \uc0\u36890 \u36807 IP\u22320 \u22336 \u26597 \u35810 \u22269 \u23478 \u20195 \u30721 \
 * @param \{string\} ip - IP\uc0\u22320 \u22336 \
 * @returns \{string|null\} \uc0\u22269 \u23478 \u20195 \u30721  (\u22914  'US', 'JP') \u25110  null\
 */\
function getCountryCodeByIp(ip) \{\
    const ipInt = ip.split('.').reduce((acc, octet, index) => acc + (parseInt(octet) << (8 * (3 - index))), 0);\
    for (const cidr in geoipDatabase) \{\
        const [network, prefixLength] = cidr.split('/');\
        const networkInt = network.split('.').reduce((acc, octet, index) => acc + (parseInt(octet) << (8 * (3 - index))), 0);\
        const mask = (0xffffffff << (32 - parseInt(prefixLength))) >>> 0;\
        if ((ipInt & mask) === (networkInt & mask)) \{\
            return geoipDatabase[cidr];\
        \}\
    \}\
    return null;\
\}\
\
/**\
 * \uc0\u36890 \u36807 \u22495 \u21517 \u26597 \u35810 \u22269 \u23478 \u20195 \u30721  (\u36890 \u36807 \u35299 \u26512 IP)\
 * @param \{string\} hostname - \uc0\u22495 \u21517 \
 * @returns \{Promise<string|null>\} \uc0\u22269 \u23478 \u20195 \u30721 \
 */\
async function getCountryCodeByHostname(hostname) \{\
    try \{\
        const dns = require('dns').promises;\
        const \{ address \} = await dns.lookup4(hostname);\
        return getCountryCodeByIp(address);\
    \} catch (e) \{\
        console.log(`DNS lookup failed for $\{hostname\}: $\{e.message\}`);\
        return null;\
    \}\
\}\
\
/**\
 * \uc0\u26816 \u26597 \u19968 \u20010 \u23383 \u31526 \u20018 \u26159 \u21542 \u26159 IP\u22320 \u22336 \u25110 \u22495 \u21517 \
 * @param \{string\} str - \uc0\u35201 \u26816 \u26597 \u30340 \u23383 \u31526 \u20018 \
 * @returns \{boolean\}\
 */\
function isIpOrHostname(str) \{\
    // \uc0\u31616 \u21333 \u30340 IP\u22320 \u22336 \u27491 \u21017 \
    const ipRegex = /^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.)\{3\}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/;\
    // \uc0\u31616 \u21333 \u30340 \u22495 \u21517 \u27491 \u21017 \
    const hostnameRegex = /^[a-zA-Z0-9]([a-zA-Z0-9\\-]\{0,61\}[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([a-zA-Z0-9\\-]\{0,61\}[a-zA-Z0-9])?)*$/;\
    return ipRegex.test(str) || hostnameRegex.test(str);\
\}\
\
// ==================== \uc0\u33050 \u26412 \u20027 \u20307  ====================\
\
const inArg = $arguments; // console.log(inArg)\
const nx = inArg.nx || false,\
  bl = inArg.bl || false,\
  nf = inArg.nf || false,\
  key = inArg.key || false,\
  blgd = inArg.blgd || false,\
  blpx = inArg.blpx || false,\
  blnx = inArg.blnx || false,\
  numone = inArg.one || false,\
  debug = inArg.debug || false,\
  clear = inArg.clear || false,\
  addflag = inArg.flag || false,\
  nm = inArg.nm || false,\
  useGeoIP = inArg.useGeoIP !== 'false'; // \uc0\u40664 \u35748 \u20026 true\
\
const FGF = inArg.fgf == undefined ? " " : decodeURI(inArg.fgf),\
  XHFGF = inArg.sn == undefined ? " " : decodeURI(inArg.sn),\
  FNAME = inArg.name == undefined ? "" : decodeURI(inArg.name),\
  BLKEY = inArg.blkey == undefined ? "" : decodeURI(inArg.blkey),\
  blockquic = inArg.blockquic == undefined ? "" : decodeURI(inArg.blockquic),\
  nameMap = \{\
    cn: "cn",\
    zh: "cn",\
    us: "us",\
    en: "us",\
    quan: "quan",\
    gq: "gq",\
    flag: "gq",\
  \},\
  inname = nameMap[inArg.in] || "",\
  outputName = nameMap[inArg.out] || "";\
\
// prettier-ignore\
const FG = ['\uc0\u55356 \u56813 \u55356 \u56816 ','\u55356 \u56818 \u55356 \u56820 ','\u55356 \u56825 \u55356 \u56828 ','\u55356 \u56815 \u55356 \u56821 ','\u55356 \u56816 \u55356 \u56823 ','\u55356 \u56824 \u55356 \u56812 ','\u55356 \u56826 \u55356 \u56824 ','\u55356 \u56812 \u55356 \u56807 ','\u55356 \u56811 \u55356 \u56823 ','\u55356 \u56809 \u55356 \u56810 ','\u55356 \u56806 \u55356 \u56826 ','\u55356 \u56806 \u55356 \u56810 ','\u55356 \u56806 \u55356 \u56811 ','\u55356 \u56806 \u55356 \u56817 ','\u55356 \u56809 \u55356 \u56831 ','\u55356 \u56806 \u55356 \u56820 ','\u55356 \u56806 \u55356 \u56823 ','\u55356 \u56806 \u55356 \u56818 ','\u55356 \u56806 \u55356 \u56825 ','\u55356 \u56806 \u55356 \u56831 ','\u55356 \u56807 \u55356 \u56813 ','\u55356 \u56807 \u55356 \u56809 ','\u55356 \u56807 \u55356 \u56830 ','\u55356 \u56807 \u55356 \u56810 ','\u55356 \u56807 \u55356 \u56831 ','\u55356 \u56807 \u55356 \u56815 ','\u55356 \u56807 \u55356 \u56825 ','\u55356 \u56807 \u55356 \u56820 ','\u55356 \u56807 \u55356 \u56806 ','\u55356 \u56807 \u55356 \u56828 ','\u55356 \u56807 \u55356 \u56823 ','\u55356 \u56827 \u55356 \u56812 ','\u55356 \u56807 \u55356 \u56819 ','\u55356 \u56807 \u55356 \u56812 ','\u55356 \u56807 \u55356 \u56811 ','\u55356 \u56807 \u55356 \u56814 ','\u55356 \u56816 \u55356 \u56813 ','\u55356 \u56808 \u55356 \u56818 ','\u55356 \u56808 \u55356 \u56806 ','\u55356 \u56808 \u55356 \u56827 ','\u55356 \u56816 \u55356 \u56830 ','\u55356 \u56808 \u55356 \u56811 ','\u55356 \u56825 \u55356 \u56809 ','\u55356 \u56808 \u55356 \u56817 ','\u55356 \u56808 \u55356 \u56820 ','\u55356 \u56816 \u55356 \u56818 ','\u55356 \u56808 \u55356 \u56812 ','\u55356 \u56808 \u55356 \u56809 ','\u55356 \u56808 \u55356 \u56823 ','\u55356 \u56813 \u55356 \u56823 ','\u55356 \u56808 \u55356 \u56830 ','\u55356 \u56808 \u55356 \u56831 ','\u55356 \u56809 \u55356 \u56816 ','\u55356 \u56809 \u55356 \u56815 ','\u55356 \u56809 \u55356 \u56820 ','\u55356 \u56810 \u55356 \u56808 ','\u55356 \u56810 \u55356 \u56812 ','\u55356 \u56824 \u55356 \u56827 ','\u55356 \u56812 \u55356 \u56822 ','\u55356 \u56810 \u55356 \u56823 ','\u55356 \u56810 \u55356 \u56810 ','\u55356 \u56810 \u55356 \u56825 ','\u55356 \u56811 \u55356 \u56815 ','\u55356 \u56811 \u55356 \u56814 ','\u55356 \u56812 \u55356 \u56806 ','\u55356 \u56812 \u55356 \u56818 ','\u55356 \u56812 \u55356 \u56810 ','\u55356 \u56812 \u55356 \u56813 ','\u55356 \u56812 \u55356 \u56823 ','\u55356 \u56812 \u55356 \u56817 ','\u55356 \u56812 \u55356 \u56825 ','\u55356 \u56812 \u55356 \u56819 ','\u55356 \u56812 \u55356 \u56830 ','\u55356 \u56813 \u55356 \u56825 ','\u55356 \u56813 \u55356 \u56819 ','\u55356 \u56813 \u55356 \u56826 ','\u55356 \u56814 \u55356 \u56824 ','\u55356 \u56814 \u55356 \u56819 ','\u55356 \u56814 \u55356 \u56809 ','\u55356 \u56814 \u55356 \u56823 ','\u55356 \u56814 \u55356 \u56822 ','\u55356 \u56814 \u55356 \u56810 ','\u55356 \u56814 \u55356 \u56818 ','\u55356 \u56814 \u55356 \u56817 ','\u55356 \u56814 \u55356 \u56825 ','\u55356 \u56808 \u55356 \u56814 ','\u55356 \u56815 \u55356 \u56818 ','\u55356 \u56815 \u55356 \u56820 ','\u55356 \u56816 \u55356 \u56831 ','\u55356 \u56816 \u55356 \u56810 ','\u55356 \u56816 \u55356 \u56828 ','\u55356 \u56816 \u55356 \u56812 ','\u55356 \u56817 \u55356 \u56806 ','\u55356 \u56817 \u55356 \u56827 ','\u55356 \u56817 \u55356 \u56807 ','\u55356 \u56817 \u55356 \u56824 ','\u55356 \u56817 \u55356 \u56823 ','\u55356 \u56817 \u55356 \u56830 ','\u55356 \u56817 \u55356 \u56825 ','\u55356 \u56817 \u55356 \u56826 ','\u55356 \u56818 \u55356 \u56816 ','\u55356 \u56818 \u55356 \u56812 ','\u55356 \u56818 \u55356 \u56828 ','\u55356 \u56818 \u55356 \u56830 ','\u55356 \u56818 \u55356 \u56827 ','\u55356 \u56818 \u55356 \u56817 ','\u55356 \u56818 \u55356 \u56825 ','\u55356 \u56818 \u55356 \u56823 ','\u55356 \u56818 \u55356 \u56826 ','\u55356 \u56818 \u55356 \u56829 ','\u55356 \u56818 \u55356 \u56809 ','\u55356 \u56818 \u55356 \u56808 ','\u55356 \u56818 \u55356 \u56819 ','\u55356 \u56818 \u55356 \u56810 ','\u55356 \u56818 \u55356 \u56806 ','\u55356 \u56818 \u55356 \u56831 ','\u55356 \u56818 \u55356 \u56818 ','\u55356 \u56819 \u55356 \u56806 ','\u55356 \u56819 \u55356 \u56821 ','\u55356 \u56819 \u55356 \u56817 ','\u55356 \u56819 \u55356 \u56831 ','\u55356 \u56819 \u55356 \u56814 ','\u55356 \u56819 \u55356 \u56810 ','\u55356 \u56819 \u55356 \u56812 ','\u55356 \u56816 \u55356 \u56821 ','\u55356 \u56819 \u55356 \u56820 ','\u55356 \u56820 \u55356 \u56818 ','\u55356 \u56821 \u55356 \u56816 ','\u55356 \u56821 \u55356 \u56806 ','\u55356 \u56821 \u55356 \u56830 ','\u55356 \u56821 \u55356 \u56810 ','\u55356 \u56821 \u55356 \u56813 ','\u55356 \u56821 \u55356 \u56825 ','\u55356 \u56821 \u55356 \u56823 ','\u55356 \u56822 \u55356 \u56806 ','\u55356 \u56823 \u55356 \u56820 ','\u55356 \u56823 \u55356 \u56826 ','\u55356 \u56823 \u55356 \u56828 ','\u55356 \u56824 \u55356 \u56818 ','\u55356 \u56824 \u55356 \u56806 ','\u55356 \u56824 \u55356 \u56819 ','\u55356 \u56823 \u55356 \u56824 ','\u55356 \u56824 \u55356 \u56817 ','\u55356 \u56824 \u55356 \u56816 ','\u55356 \u56824 \u55356 \u56814 ','\u55356 \u56824 \u55356 \u56820 ','\u55356 \u56831 \u55356 \u56806 ','\u55356 \u56810 \u55356 \u56824 ','\u55356 \u56817 \u55356 \u56816 ','\u55356 \u56824 \u55356 \u56809 ','\u55356 \u56824 \u55356 \u56823 ','\u55356 \u56824 \u55356 \u56831 ','\u55356 \u56824 \u55356 \u56810 ','\u55356 \u56808 \u55356 \u56813 ','\u55356 \u56824 \u55356 \u56830 ','\u55356 \u56825 \u55356 \u56815 ','\u55356 \u56825 \u55356 \u56831 ','\u55356 \u56825 \u55356 \u56813 ','\u55356 \u56825 \u55356 \u56812 ','\u55356 \u56825 \u55356 \u56820 ','\u55356 \u56825 \u55356 \u56825 ','\u55356 \u56825 \u55356 \u56819 ','\u55356 \u56825 \u55356 \u56823 ','\u55356 \u56825 \u55356 \u56818 ','\u55356 \u56827 \u55356 \u56814 ','\u55356 \u56826 \u55356 \u56812 ','\u55356 \u56826 \u55356 \u56806 ','\u55356 \u56826 \u55356 \u56830 ','\u55356 \u56826 \u55356 \u56831 ','\u55356 \u56827 \u55356 \u56810 ','\u55356 \u56827 \u55356 \u56819 ','\u55356 \u56830 \u55356 \u56810 ','\u55356 \u56831 \u55356 \u56818 ','\u55356 \u56831 \u55356 \u56828 ','\u55356 \u56806 \u55356 \u56809 ','\u55356 \u56823 \u55356 \u56810 ','\u55356 \u56821 \u55356 \u56817 ','\u55356 \u56812 \u55356 \u56826 ','\u55356 \u56827 \u55356 \u56806 ','\u55356 \u56817 \u55356 \u56814 ','\u55356 \u56808 \u55356 \u56828 ','\u55356 \u56824 \u55356 \u56808 ','\u55356 \u56806 \u55356 \u56822 ','\u55356 \u56812 \u55356 \u56814 ','\u55356 \u56808 \u55356 \u56826 ','\u55356 \u56811 \u55356 \u56820 ','\u55356 \u56806 \u55356 \u56829 ','\u55356 \u56807 \u55356 \u56818 ','\u55356 \u56825 \u55356 \u56817 ']\
// prettier-ignore\
const EN = ['HK','MO','TW','JP','KR','SG','US','GB','FR','DE','AU','AE','AF','AL','DZ','AO','AR','AM','AT','AZ','BH','BD','BY','BE','BZ','BJ','BT','BO','BA','BW','BR','VG','BN','BG','BF','BI','KH','CM','CA','CV','KY','CF','TD','CL','CO','KM','CG','CD','CR','HR','CY','CZ','DK','DJ','DO','EC','EG','SV','GQ','ER','EE','ET','FJ','FI','GA','GM','GE','GH','GR','GL','GT','GN','GY','HT','HN','HU','IS','IN','ID','IR','IQ','IE','IM','IL','IT','CI','JM','JO','KZ','KE','KW','KG','LA','LV','LB','LS','LR','LY','LT','LU','MK','MG','MW','MY','MV','ML','MT','MR','MU','MX','MD','MC','MN','ME','MA','MZ','MM','NA','NP','NL','NZ','NI','NE','NG','KP','NO','OM','PK','PA','PY','PE','PH','PT','PR','QA','RO','RU','RW','SM','SA','SN','RS','SL','SK','SI','SO','ZA','ES','LK','SD','SR','SZ','SE','CH','SY','TJ','TZ','TH','TG','TO','TT','TN','TR','TM','VI','UG','UA','UY','UZ','VE','VN','YE','ZM','ZW','AD','RE','PL','GU','VA','LI','CW','SC','AQ','GI','CU','FO','AX','BM','TL'];\
// prettier-ignore\
const ZH = ['\uc0\u39321 \u28207 ','\u28595 \u38376 ','\u21488 \u28286 ','\u26085 \u26412 ','\u38889 \u22269 ','\u26032 \u21152 \u22369 ','\u32654 \u22269 ','\u33521 \u22269 ','\u27861 \u22269 ','\u24503 \u22269 ','\u28595 \u22823 \u21033 \u20122 ','\u38463 \u32852 \u37195 ','\u38463 \u23500 \u27735 ','\u38463 \u23572 \u24052 \u23612 \u20122 ','\u38463 \u23572 \u21450 \u21033 \u20122 ','\u23433 \u21733 \u25289 ','\u38463 \u26681 \u24311 ','\u20122 \u32654 \u23612 \u20122 ','\u22885 \u22320 \u21033 ','\u38463 \u22622 \u25308 \u30086 ','\u24052 \u26519 ','\u23391 \u21152 \u25289 \u22269 ','\u30333 \u20420 \u32599 \u26031 ','\u27604 \u21033 \u26102 ','\u20271 \u21033 \u20857 ','\u36125 \u23425 ','\u19981 \u20025 ','\u29627 \u21033 \u32500 \u20122 ','\u27874 \u26031 \u23612 \u20122 \u21644 \u40657 \u22622 \u21733 \u32500 \u37027 ','\u21338 \u33576 \u29926 \u32435 ','\u24052 \u35199 ','\u33521 \u23646 \u32500 \u20140 \u32676 \u23707 ','\u25991 \u33713 ','\u20445 \u21152 \u21033 \u20122 ','\u24067 \u22522 \u32435 \u27861 \u32034 ','\u24067 \u38534 \u36842 ','\u26604 \u22484 \u23528 ','\u21888 \u40614 \u38534 ','\u21152 \u25343 \u22823 ','\u20315 \u24471 \u35282 ','\u24320 \u26364 \u32676 \u23707 ','\u20013 \u38750 \u20849 \u21644 \u22269 ','\u20045 \u24471 ','\u26234 \u21033 ','\u21733 \u20262 \u27604 \u20122 ','\u31185 \u25705 \u32599 ','\u21018 \u26524 (\u24067 )','\u21018 \u26524 (\u37329 )','\u21733 \u26031 \u36798 \u40654 \u21152 ','\u20811 \u32599 \u22320 \u20122 ','\u22622 \u28006 \u36335 \u26031 ','\u25463 \u20811 ','\u20025 \u40614 ','\u21513 \u24067 \u25552 ','\u22810 \u31859 \u23612 \u21152 \u20849 \u21644 \u22269 ','\u21380 \u29916 \u22810 \u23572 ','\u22467 \u21450 ','\u33832 \u23572 \u29926 \u22810 ','\u36196 \u36947 \u20960 \u20869 \u20122 ','\u21380 \u31435 \u29305 \u37324 \u20122 ','\u29233 \u27801 \u23612 \u20122 ','\u22467 \u22622 \u20420 \u27604 \u20122 ','\u26000 \u27982 ','\u33452 \u20848 ','\u21152 \u34028 ','\u20872 \u27604 \u20122 ','\u26684 \u40065 \u21513 \u20122 ','\u21152 \u32435 ','\u24076 \u33098 ','\u26684 \u38517 \u20848 ','\u21361 \u22320 \u39532 \u25289 ','\u20960 \u20869 \u20122 ','\u22317 \u20122 \u37027 ','\u28023 \u22320 ','\u27946 \u37117 \u25289 \u26031 ','\u21256 \u29273 \u21033 ','\u20912 \u23707 ','\u21360 \u24230 ','\u21360 \u23612 ','\u20234 \u26391 ','\u20234 \u25289 \u20811 ','\u29233 \u23572 \u20848 ','\u39532 \u24681 \u23707 ','\u20197 \u33394 \u21015 ','\u24847 \u22823 \u21033 ','\u31185 \u29305 \u36842 \u29926 ','\u29273 \u20080 \u21152 ','\u32422 \u26086 ','\u21704 \u33832 \u20811 \u26031 \u22374 ','\u32943 \u23612 \u20122 ','\u31185 \u23041 \u29305 ','\u21513 \u23572 \u21513 \u26031 \u26031 \u22374 ','\u32769 \u25373 ','\u25289 \u33073 \u32500 \u20122 ','\u40654 \u24052 \u23273 ','\u33713 \u32034 \u25176 ','\u21033 \u27604 \u37324 \u20122 ','\u21033 \u27604 \u20122 ','\u31435 \u38518 \u23451 ','\u21346 \u26862 \u22561 ','\u39532 \u20854 \u39039 ','\u39532 \u36798 \u21152 \u26031 \u21152 ','\u39532 \u25289 \u32500 ','\u39532 \u26469 ','\u39532 \u23572 \u20195 \u22827 ','\u39532 \u37324 ','\u39532 \u32819 \u20182 ','\u27611 \u21033 \u22612 \u23612 \u20122 ','\u27611 \u37324 \u27714 \u26031 ','\u22696 \u35199 \u21733 ','\u25705 \u23572 \u22810 \u29926 ','\u25705 \u32435 \u21733 ','\u33945 \u21476 ','\u40657 \u23665 \u20849 \u21644 \u22269 ','\u25705 \u27931 \u21733 ','\u33707 \u26705 \u27604 \u20811 ','\u32517 \u30008 ','\u32435 \u31859 \u27604 \u20122 ','\u23612 \u27850 \u23572 ','\u33655 \u20848 ','\u26032 \u35199 \u20848 ','\u23612 \u21152 \u25289 \u29916 ','\u23612 \u26085 \u23572 ','\u23612 \u26085 \u21033 \u20122 ','\u26397 \u40092 ','\u25386 \u23041 ','\u38463 \u26364 ','\u24052 \u22522 \u26031 \u22374 ','\u24052 \u25343 \u39532 ','\u24052 \u25289 \u22317 ','\u31192 \u40065 ','\u33778 \u24459 \u23486 ','\u33889 \u33796 \u29273 ','\u27874 \u22810 \u40654 \u21508 ','\u21345 \u22612 \u23572 ','\u32599 \u39532 \u23612 \u20122 ','\u20420 \u32599 \u26031 ','\u21346 \u26106 \u36798 ','\u22307 \u39532 \u21147 \u35834 ','\u27801 \u29305 \u38463 \u25289 \u20271 ','\u22622 \u20869 \u21152 \u23572 ','\u22622 \u23572 \u32500 \u20122 ','\u22622 \u25289 \u21033 \u26114 ','\u26031 \u27931 \u20240 \u20811 ','\u26031 \u27931 \u25991 \u23612 \u20122 ','\u32034 \u39532 \u37324 ','\u21335 \u38750 ','\u35199 \u29677 \u29273 ','\u26031 \u37324 \u20848 \u21345 ','\u33487 \u20025 ','\u33487 \u37324 \u21335 ','\u26031 \u23041 \u22763 \u20848 ','\u29790 \u20856 ','\u29790 \u22763 ','\u21465 \u21033 \u20122 ','\u22612 \u21513 \u20811 \u26031 \u22374 ','\u22374 \u26705 \u23612 \u20122 ','\u27888 \u22269 ','\u22810 \u21733 ','\u27748 \u21152 ','\u29305 \u31435 \u23612 \u36798 \u21644 \u22810 \u24052 \u21733 ','\u31361 \u23612 \u26031 ','\u22303 \u32819 \u20854 ','\u22303 \u24211 \u26364 \u26031 \u22374 ','\u32654 \u23646 \u32500 \u23572 \u20140 \u32676 \u23707 ','\u20044 \u24178 \u36798 ','\u20044 \u20811 \u20848 ','\u20044 \u25289 \u22317 ','\u20044 \u20857 \u21035 \u20811 \u26031 \u22374 ','\u22996 \u20869 \u29790 \u25289 ','\u36234 \u21335 ','\u20063 \u38376 ','\u36190 \u27604 \u20122 ','\u27941 \u24052 \u24067 \u38886 ','\u23433 \u36947 \u23572 ','\u30041 \u23612 \u27754 ','\u27874 \u20848 ','\u20851 \u23707 ','\u26805 \u33922 \u20872 ','\u21015 \u25903 \u25958 \u22763 \u30331 ','\u24211 \u25289 \u32034 ','\u22622 \u33292 \u23572 ','\u21335 \u26497 ','\u30452 \u24067 \u32599 \u38464 ','\u21476 \u24052 ','\u27861 \u32599 \u32676 \u23707 ','\u22885 \u20848 \u32676 \u23707 ','\u30334 \u24917 \u36798 ','\u19996 \u24093 \u27766 '];\
// prettier-ignore\
const QC = ['Hong Kong','Macao','Taiwan','Japan','Korea','Singapore','United States','United Kingdom','France','Germany','Australia','Dubai','Afghanistan','Albania','Algeria','Angola','Argentina','Armenia','Austria','Azerbaijan','Bahrain','Bangladesh','Belarus','Belgium','Belize','Benin','Bhutan','Bolivia','Bosnia and Herzegovina','Botswana','Brazil','British Virgin Islands','Brunei','Bulgaria','Burkina-faso','Burundi','Cambodia','Cameroon','Canada','CapeVerde','CaymanIslands','Central African Republic','Chad','Chile','Colombia','Comoros','Congo-Brazzaville','Congo-Kinshasa','CostaRica','Croatia','Cyprus','Czech Republic','Denmark','Djibouti','Dominican Republic','Ecuador','Egypt','EISalvador','Equatorial Guinea','Eritrea','Estonia','Ethiopia','Fiji','Finland','Gabon','Gambia','Georgia','Ghana','Greece','Greenland','Guatemala','Guinea','Guyana','Haiti','Honduras','Hungary','Iceland','India','Indonesia','Iran','Iraq','Ireland','Isle of Man','Israel','Italy','Ivory Coast','Jamaica','Jordan','Kazakstan','Kenya','Kuwait','Kyrgyzstan','Laos','Latvia','Lebanon','Lesotho','Liberia','Libya','Lithuania','Luxembourg','Macedonia','Madagascar','Malawi','Malaysia','Maldives','Mali','Malta','Mauritania','Mauritius','Mexico','Moldova','Monaco','Mongolia','Montenegro','Morocco','Mozambique','Myanmar(Burma)','Namibia','Nepal','Netherlands','New Zealand','Nicaragua','Niger','Nigeria','NorthKorea','Norway','Oman','Pakistan','Panama','Paraguay','Peru','Philippines','Portugal','PuertoRico','Qatar','Romania','Russia','Rwanda','SanMarino','SaudiArabia','Senegal','Serbia','SierraLeone','Slovakia','Slovenia','Somalia','SouthAfrica','Spain','SriLanka','Sudan','Suriname','Swaziland','Sweden','Switzerland','Syria','Tajikstan','Tanzania','Thailand','Togo','Tonga','TrinidadandTobago','Tunisia','Turkey','Turkmenistan','U.S.Virgin Islands','Uganda','Ukraine','Uruguay','Uzbekistan','Venezuela','Vietnam','Yemen','Zambia','Zimbabwe','Andorra','Reunion','Poland','Guam','Vatican','Liechtensteins','Curacao','Seychelles','Antarctica','Gibraltar','Cuba','Faroe Islands','Ahvenanmaa','Bermuda','Timor-Leste'];\
\
// \uc0\u22269 \u23478 \u20195 \u30721 \u21040 \u20013 \u25991 /\u33521 \u25991 \u32553 \u20889 \u30340 \u26144 \u23556 \
const countryCodeMap = \{\
    'HK': '\uc0\u39321 \u28207 ', 'MO': '\u28595 \u38376 ', 'TW': '\u21488 \u28286 ', 'JP': '\u26085 \u26412 ', 'KR': '\u38889 \u22269 ', 'SG': '\u26032 \u21152 \u22369 ',\
    'US': '\uc0\u32654 \u22269 ', 'GB': '\u33521 \u22269 ', 'FR': '\u27861 \u22269 ', 'DE': '\u24503 \u22269 ', 'AU': '\u28595 \u22823 \u21033 \u20122 ', 'AE': '\u38463 \u32852 \u37195 ',\
    // ... \uc0\u21487 \u20197 \u26681 \u25454 \u38656 \u35201 \u34917 \u20805 \u26356 \u22810 \
\};\
\
const specialRegex = [/(\\d\\.)?\\d+\'d7/, /IPLC|IEPL|Kern|Edge|Pro|Std|Exp|Biz|Fam|Game|Buy|Zx|LB|Game/];\
const nameclear = /(\uc0\u22871 \u39184 |\u21040 \u26399 |\u26377 \u25928 |\u21097 \u20313 |\u29256 \u26412 |\u24050 \u29992 |\u36807 \u26399 |\u22833 \u32852 |\u27979 \u35797 |\u23448 \u26041 |\u32593 \u22336 |\u22791 \u29992 |\u32676 |TEST|\u23458 \u26381 |\u32593 \u31449 |\u33719 \u21462 |\u35746 \u38405 |\u27969 \u37327 |\u26426 \u22330 |\u19979 \u27425 |\u23448 \u22336 |\u32852 \u31995 |\u37038 \u31665 |\u24037 \u21333 |\u23398 \u26415 |USE|USED|TOTAL|EXPIRE|EMAIL)/i;\
// prettier-ignore\
const regexArray=[/\uc0\u739 \'b2/, /\u739 \'b3/, /\u739 \u8308 /, /\u739 \u8309 /, /\u739 \u8310 /, /\u739 \u8311 /, /\u739 \u8312 /, /\u739 \u8313 /, /\u739 \'b9\u8304 /, /\u739 \'b2\u8304 /, /\u739 \'b3\u8304 /, /\u739 \u8308 \u8304 /, /\u739 \u8309 \u8304 /, /IPLC/i, /IEPL/i, /\u26680 \u24515 /, /\u36793 \u32536 /, /\u39640 \u32423 /, /\u26631 \u20934 /, /\u23454 \u39564 /, /\u21830 \u23485 /, /\u23478 \u23485 /, /\u28216 \u25103 |game/i, /\u36141 \u29289 /, /\u19987 \u32447 /, /LB/, /cloudflare/i, /\\budp\\b/i, /\\bgpt\\b/i,/udpn\\b/];\
// prettier-ignore\
const valueArray= [ "2\'d7","3\'d7","4\'d7","5\'d7","6\'d7","7\'d7","8\'d7","9\'d7","10\'d7","20\'d7","30\'d7","40\'d7","50\'d7","IPLC","IEPL","Kern","Edge","Pro","Std","Exp","Biz","Fam","Game","Buy","Zx","LB","CF","UDP","GPT","UDPN"];\
const nameblnx = /(\uc0\u39640 \u20493 |(?!1)2+(x|\u20493 )|\u739 \'b2|\u739 \'b3|\u739 \u8308 |\u739 \u8309 |\u739 \'b9\u8304 )/i;\
const namenx = /(\uc0\u39640 \u20493 |(?!1)(0\\.|\\d)+(x|\u20493 )|\u739 \'b2|\u739 \'b3|\u739 \u8308 |\u739 \u8309 |\u739 \'b9\u8304 )/i;\
const keya = /\uc0\u28207 |Hong|HK|\u26032 \u21152 \u22369 |SG|Singapore|\u26085 \u26412 |Japan|JP|\u32654 \u22269 |United States|US|\u38889 |\u22303 \u32819 \u20854 |TR|Turkey|Korea|KR|\u55356 \u56824 \u55356 \u56812 |\u55356 \u56813 \u55356 \u56816 |\u55356 \u56815 \u55356 \u56821 |\u55356 \u56826 \u55356 \u56824 |\u55356 \u56816 \u55356 \u56823 |\u55356 \u56825 \u55356 \u56823 /i;\
const keyb = /(((1|2|3|4)\\d)|(\uc0\u39321 \u28207 |Hong|HK) 0[5-9]|((\u26032 \u21152 \u22369 |SG|Singapore|\u26085 \u26412 |Japan|JP|\u32654 \u22269 |United States|US|\u38889 |\u22303 \u32819 \u20854 |TR|Turkey|Korea|KR) 0[3-9]))/i;\
const rurekey = \{\
    GB: /UK/g, "B-G-P": /BGP/g, "Russia Moscow": /Moscow/g, "Korea Chuncheon": /Chuncheon|Seoul/g,\
    "Hong Kong": /Hongkong|HONG KONG/gi, "United Kingdom London": /London|Great Britain/g,\
    "Dubai United Arab Emirates": /United Arab Emirates/g,\
    "Taiwan TW \uc0\u21488 \u28286  \u55356 \u56825 \u55356 \u56828 ": /(\u21488 |Tai\\s?wan|TW).*?\u55356 \u56808 \u55356 \u56819 |\u55356 \u56808 \u55356 \u56819 .*?(\u21488 |Tai\\s?wan|TW)/g,\
    "United States": /USA|Los Angeles|San Jose|Silicon Valley|Michigan/g,\
    \uc0\u28595 \u22823 \u21033 \u20122 : /\u28595 \u27954 |\u22696 \u23572 \u26412 |\u24713 \u23612 |\u22303 \u28595 |(\u28145 |\u27818 |\u21628 |\u20140 |\u24191 |\u26477 )\u28595 /g, \u24503 \u22269 : /(\u28145 |\u27818 |\u21628 |\u20140 |\u24191 |\u26477 )\u24503 (?!.*(I|\u32447 ))|\u27861 \u20848 \u20811 \u31119 |\u28396 \u24503 /g,\
    \uc0\u39321 \u28207 : /(\u28145 |\u27818 |\u21628 |\u20140 |\u24191 |\u26477 )\u28207 (?!.*(I|\u32447 ))/g, \u26085 \u26412 : /(\u28145 |\u27818 |\u21628 |\u20140 |\u24191 |\u26477 |\u20013 |\u36797 )\u26085 (?!.*(I|\u32447 ))|\u19996 \u20140 |\u22823 \u22338 /g,\
    \uc0\u26032 \u21152 \u22369 : /\u29422 \u22478 |(\u28145 |\u27818 |\u21628 |\u20140 |\u24191 |\u26477 )\u26032 /g,\
    \uc0\u32654 \u22269 : /(\u28145 |\u27818 |\u21628 |\u20140 |\u24191 |\u26477 )\u32654 |\u27874 \u29305 \u20848 |\u33437 \u21152 \u21733 |\u21733 \u20262 \u24067 |\u32445 \u32422 |\u30789 \u35895 |\u20420 \u21202 \u20872 |\u35199 \u38597 \u22270 |\u33437 \u21152 \u21733 /g,\
    \uc0\u27874 \u26031 \u23612 \u20122 \u21644 \u40657 \u22622 \u21733 \u32500 \u37027 : /\u27874 \u40657 \u20849 \u21644 \u22269 /g, \u21360 \u23612 : /\u21360 \u24230 \u23612 \u35199 \u20122 |\u38597 \u21152 \u36798 /g, \u21360 \u24230 : /\u23391 \u20080 /g, \u38463 \u32852 \u37195 : /\u36842 \u25308 |\u38463 \u25289 \u20271 \u32852 \u21512 \u37195 \u38271 \u22269 /g,\
    \uc0\u23391 \u21152 \u25289 \u22269 : /\u23391 \u21152 \u25289 /g, \u25463 \u20811 : /\u25463 \u20811 \u20849 \u21644 \u22269 /g, \u21488 \u28286 : /\u26032 \u21488 |\u26032 \u21271 |\u21488 (?!.*\u32447 )/g, Taiwan: /Taipei/g,\
    \uc0\u38889 \u22269 : /\u26149 \u24029 |\u38889 |\u39318 \u23572 /g, Japan: /Tokyo|Osaka/g, \u33521 \u22269 : /\u20262 \u25958 /g, India: /Mumbai/g,\
    Germany: /Frankfurt/g, Switzerland: /Zurich/g, \uc0\u20420 \u32599 \u26031 : /\u33707 \u26031 \u31185 /g, \u22303 \u32819 \u20854 : /\u20234 \u26031 \u22374 \u24067 \u23572 /g,\
    \uc0\u27888 \u22269 : /\u27888 \u22283 |\u26364 \u35895 /g, \u27861 \u22269 : /\u24052 \u40654 /g, G: /\\d\\s?GB/gi, Esnc: /esnc/gi,\
\};\
\
let GetK = false, AMK = []\
function ObjKA(i) \{ GetK = true; AMK = Object.entries(i); \}\
\
async function operator(proxies) \{\
    const Allmap = \{\};\
    const outList = getList(outputName);\
    let inputList, retainKey = "";\
\
    if (inname !== "") \{\
        inputList = [getList(inname)];\
    \} else \{\
        inputList = [ZH, FG, QC, EN];\
    \}\
\
    inputList.forEach((arr) => \{\
        arr.forEach((value, valueIndex) => \{\
            Allmap[value] = outList[valueIndex];\
        \});\
    \});\
\
    // \uc0\u22914 \u26524 \u21551 \u29992 GeoIP\u65292 \u20808 \u22788 \u29702 IP/\u22495 \u21517 \u33410 \u28857 \
    let processedProxies = [];\
    if (useGeoIP) \{\
        for (const proxy of proxies) \{\
            if (isIpOrHostname(proxy.name)) \{\
                const serverAddress = proxy.server; // \uc0\u33719 \u21462 \u33410 \u28857 \u37197 \u32622 \u20013 \u30340 \u26381 \u21153 \u22120 \u22320 \u22336 \
                let countryCode = null;\
                if (serverAddress) \{\
                    if (isIpOrHostname(serverAddress)) \{\
                        if (/^(?:[0-9]\{1,3\}\\.)\{3\}[0-9]\{1,3\}$/.test(serverAddress)) \{\
                            countryCode = getCountryCodeByIp(serverAddress);\
                        \} else \{\
                            countryCode = await getCountryCodeByHostname(serverAddress);\
                        \}\
                    \}\
                \}\
                if (countryCode) \{\
                    const mappedName = countryCodeMap[countryCode] || countryCode;\
                    // \uc0\u20020 \u26102 \u20462 \u25913 \u33410 \u28857 \u21517 \u31216 \u65292 \u35753 \u21518 \u32493 \u36923 \u36753 \u33021 \u35782 \u21035 \
                    // \uc0\u27880 \u24847 \u65306 \u36825 \u37324 \u30452 \u25509 \u20462 \u25913 \u20102 \u21407 \u22987 \u23545 \u35937 \u65292 \u22914 \u26524 \u19981 \u24819 \u27745 \u26579 \u65292 \u21487 \u20197 \u21019 \u24314 \u21103 \u26412 \
                    proxy.originalName = proxy.name; // \uc0\u20445 \u23384 \u21407 \u22987 \u21517 \u31216 \
                    proxy.name = mappedName;\
                \}\
            \}\
            processedProxies.push(proxy);\
        \}\
    \} else \{\
        processedProxies = [...proxies];\
    \}\
\
\
    if (clear || nx || blnx || key) \{\
        processedProxies = processedProxies.filter((res) => \{\
            const resname = res.name;\
            const shouldKeep =\
                !(clear && nameclear.test(resname)) &&\
                !(nx && namenx.test(resname)) &&\
                !(blnx && !nameblnx.test(resname)) &&\
                !(key && !(keya.test(resname) && /2|4|6|7/i.test(resname)));\
            return shouldKeep;\
        \});\
    \}\
\
    const BLKEYS = BLKEY ? BLKEY.split("+") : "";\
\
    for (const e of processedProxies) \{\
        let bktf = false, ens = e.name;\
        // \uc0\u39044 \u22788 \u29702  \u38450 \u27490 \u39044 \u21028 \u25110 \u36951 \u28431 \
        for (const ikey in rurekey) \{\
            if (rurekey[ikey].test(e.name)) \{\
                e.name = e.name.replace(rurekey[ikey], ikey);\
                if (BLKEY) \{\
                    bktf = true;\
                    let BLKEY_REPLACE = "", re = false;\
                    BLKEYS.forEach((i) => \{\
                        if (i.includes(">") && ens.includes(i.split(">")[0])) \{\
                            if (rurekey[ikey].test(i.split(">")[0])) \{\
                                e.name += " " + i.split(">")[0]\
                            \}\
                            if (i.split(">")[1]) \{ BLKEY_REPLACE = i.split(">")[1]; re = true; \}\
                        \} else \{\
                            if (ens.includes(i)) \{ e.name += " " + i; \}\
                        \}\
                    \});\
                    retainKey = re ? BLKEY_REPLACE : BLKEYS.filter((items) => e.name.includes(items));\
                \}\
            \}\
        \}\
        if (blockquic == "on") \{ e["block-quic"] = "on"; \} else if (blockquic == "off") \{ e["block-quic"] = "off"; \} else \{ delete e["block-quic"]; \}\
\
        // \uc0\u33258 \u23450 \u20041 \
        if (!bktf && BLKEY) \{\
            let BLKEY_REPLACE = "", re = false;\
            BLKEYS.forEach((i) => \{ if (i.includes(">") && e.name.includes(i.split(">")[0])) \{ if (i.split(">")[1]) \{ BLKEY_REPLACE = i.split(">")[1]; re = true; \} \} \});\
            retainKey = re ? BLKEY_REPLACE : BLKEYS.filter((items) => e.name.includes(items));\
        \}\
\
        let ikey = "", ikeys = "";\
        // \uc0\u20445 \u30041 \u22266 \u23450 \u26684 \u24335  \u20493 \u29575 \
        if (blgd) \{ regexArray.forEach((regex, index) => \{ if (regex.test(e.name)) \{ ikeys = valueArray[index]; \} \}); \}\
\
        // \uc0\u27491 \u21017  \u21305 \u37197 \u20493 \u29575 \
        if (bl) \{\
            const match = e.name.match(/((\uc0\u20493 \u29575 |X|x|\'d7)\\D?((\\d\{1,3\}\\.)?\\d+)\\D?)|((\\d\{1,3\}\\.)?\\d+)(\u20493 |X|x|\'d7)/);\
            if (match) \{\
                const rev = match[0].match(/(\\d[\\d.]*)/)[0];\
                if (rev !== "1") \{ const newValue = rev + "\'d7"; ikey = newValue; \}\
            \}\
        \}\
\
        !GetK && ObjKA(Allmap);\
        // \uc0\u21305 \u37197  Allkey \u22320 \u21306 \
        const findKey = AMK.find(([key]) => e.name.includes(key));\
\
        let firstName = "", nNames = "";\
        if (nf) \{ firstName = FNAME; \} else \{ nNames = FNAME; \}\
\
        if (findKey?.[1]) \{\
            const findKeyValue = findKey[1];\
            let keyover = [], usflag = "";\
            if (addflag) \{\
                const index = outList.indexOf(findKeyValue);\
                if (index !== -1) \{ usflag = FG[index]; usflag = usflag === "\uc0\u55356 \u56825 \u55356 \u56828 " ? "\u55356 \u56808 \u55356 \u56819 " : usflag; \}\
            \}\
            keyover = keyover.concat(firstName, usflag, nNames, findKeyValue, retainKey, ikey, ikeys).filter((k) => k !== "");\
            e.name = keyover.join(FGF);\
        \} else \{\
            if (nm) \{\
                // \uc0\u22914 \u26524 \u26159 IP/\u22495 \u21517 \u33410 \u28857 \u19988 \u26410 \u21305 \u37197 \u21040 \u65292 \u24674 \u22797 \u21407 \u22987 \u21517 \u31216 \
                e.name = (e.originalName || e.name);\
                e.name = FNAME + FGF + e.name;\
            \} else \{\
                e.name = null;\
            \}\
        \}\
    \}\
\
    let finalProxies = processedProxies.filter((e) => e.name !== null);\
    jxh(finalProxies);\
    numone && oneP(finalProxies);\
    blpx && (finalProxies = fampx(finalProxies));\
    key && (finalProxies = finalProxies.filter((e) => !keyb.test(e.name)));\
\
    return finalProxies;\
\}\
\
// prettier-ignore\
function getList(arg) \{ switch (arg) \{ case 'us': return EN; case 'gq': return FG; case 'quan': return QC; default: return ZH; \} \}\
// prettier-ignore\
function jxh(e) \{ const n = e.reduce((e, n) => \{ const t = e.find((e) => e.name === n.name); if (t) \{ t.count++; t.items.push(\{ ...n, name: `$\{n.name\}$\{XHFGF\}$\{t.count.toString().padStart(2, "0")\}`, \}); \} else \{ e.push(\{ name: n.name, count: 1, items: [\{ ...n, name: `$\{n.name\}$\{XHFGF\}01` \}], \}); \} return e; \}, []); const t = (typeof Array.prototype.flatMap === 'function' ? n.flatMap((e) => e.items) : n.reduce((acc, e) => acc.concat(e.items), [])); e.splice(0, e.length, ...t); return e; \}\
// prettier-ignore\
function oneP(e) \{ const t = e.reduce((e, t) => \{ const n = t.name.replace(/[^A-Za-z0-9\\u00C0-\\u017F\\u4E00-\\u9FFF]+\\d+$/, ""); if (!e[n]) \{ e[n] = []; \} e[n].push(t); return e; \}, \{\}); for (const e in t) \{ if (t[e].length === 1 && t[e][0].name.endsWith("01")) \{ t[e][0].name = t[e][0].name.replace(/[^.]01/, "") \} \} return e; \}\
// prettier-ignore\
function fampx(pro) \{ const wis = []; const wnout = []; for (const proxy of pro) \{ const fan = specialRegex.some((regex) => regex.test(proxy.name)); if (fan) \{ wis.push(proxy); \} else \{ wnout.push(proxy); \} \} const sps = wis.map((proxy) => specialRegex.findIndex((regex) => regex.test(proxy.name))); wis.sort((a, b) => sps[wis.indexOf(a)] - sps[wis.indexOf(b)] || a.name.localeCompare(b.name)); wnout.sort((a, b) => pro.indexOf(a) - pro.indexOf(b)); return wnout.concat(wis); \}\
\
\
//  \uc0\u33410 \u28857 \u21517 \u25913 \u20026 \u33457 \u37324 \u32993 \u21736 \u23383 \u20307 \u65292 \u20165 \u25903 \u25345 \u33521 \u25991 \u23383 \u31526 \u21644 \u25968 \u23383 \
function fancyCharOperator(proxies) \{\
    const \{ type, num \} = $arguments;\
    const TABLE = \{\
        "serif-bold": ["\uc0\u55349 \u57294 ", "\u55349 \u57295 ", "\u55349 \u57296 ", "\u55349 \u57297 ", "\u55349 \u57298 ", "\u55349 \u57299 ", "\u55349 \u57300 ", "\u55349 \u57301 ", "\u55349 \u57302 ", "\u55349 \u57303 ", "\u55349 \u56346 ", "\u55349 \u56347 ", "\u55349 \u56348 ", "\u55349 \u56349 ", "\u55349 \u56350 ", "\u55349 \u56351 ", "\u55349 \u56352 ", "\u55349 \u56353 ", "\u55349 \u56354 ", "\u55349 \u56355 ", "\u55349 \u56356 ", "\u55349 \u56357 ", "\u55349 \u56358 ", "\u55349 \u56359 ", "\u55349 \u56360 ", "\u55349 \u56361 ", "\u55349 \u56362 ", "\u55349 \u56363 ", "\u55349 \u56364 ", "\u55349 \u56365 ", "\u55349 \u56366 ", "\u55349 \u56367 ", "\u55349 \u56368 ", "\u55349 \u56369 ", "\u55349 \u56370 ", "\u55349 \u56371 ", "\u55349 \u56320 ", "\u55349 \u56321 ", "\u55349 \u56322 ", "\u55349 \u56323 ", "\u55349 \u56324 ", "\u55349 \u56325 ", "\u55349 \u56326 ", "\u55349 \u56327 ", "\u55349 \u56328 ", "\u55349 \u56329 ", "\u55349 \u56330 ", "\u55349 \u56331 ", "\u55349 \u56332 ", "\u55349 \u56333 ", "\u55349 \u56334 ", "\u55349 \u56335 ", "\u55349 \u56336 ", "\u55349 \u56337 ", "\u55349 \u56338 ", "\u55349 \u56339 ", "\u55349 \u56340 ", "\u55349 \u56341 ", "\u55349 \u56342 ", "\u55349 \u56343 ", "\u55349 \u56344 ", "\u55349 \u56345 "],\
        "serif-italic": ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "\uc0\u55349 \u56398 ", "\u55349 \u56399 ", "\u55349 \u56400 ", "\u55349 \u56401 ", "\u55349 \u56402 ", "\u55349 \u56403 ", "\u55349 \u56404 ", "\u8462 ", "\u55349 \u56406 ", "\u55349 \u56407 ", "\u55349 \u56408 ", "\u55349 \u56409 ", "\u55349 \u56410 ", "\u55349 \u56411 ", "\u55349 \u56412 ", "\u55349 \u56413 ", "\u55349 \u56414 ", "\u55349 \u56415 ", "\u55349 \u56416 ", "\u55349 \u56417 ", "\u55349 \u56418 ", "\u55349 \u56419 ", "\u55349 \u56420 ", "\u55349 \u56421 ", "\u55349 \u56422 ", "\u55349 \u56423 ", "\u55349 \u56372 ", "\u55349 \u56373 ", "\u55349 \u56374 ", "\u55349 \u56375 ", "\u55349 \u56376 ", "\u55349 \u56377 ", "\u55349 \u56378 ", "\u55349 \u56379 ", "\u55349 \u56380 ", "\u55349 \u56381 ", "\u55349 \u56382 ", "\u55349 \u56383 ", "\u55349 \u56384 ", "\u55349 \u56385 ", "\u55349 \u56386 ", "\u55349 \u56387 ", "\u55349 \u56388 ", "\u55349 \u56389 ", "\u55349 \u56390 ", "\u55349 \u56391 ", "\u55349 \u56392 ", "\u55349 \u56393 ", "\u55349 \u56394 ", "\u55349 \u56395 ", "\u55349 \u56396 ", "\u55349 \u56397 "],\
        "serif-bold-italic": ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "\uc0\u55349 \u56450 ", "\u55349 \u56451 ", "\u55349 \u56452 ", "\u55349 \u56453 ", "\u55349 \u56454 ", "\u55349 \u56455 ", "\u55349 \u56456 ", "\u55349 \u56457 ", "\u55349 \u56458 ", "\u55349 \u56459 ", "\u55349 \u56460 ", "\u55349 \u56461 ", "\u55349 \u56462 ", "\u55349 \u56463 ", "\u55349 \u56464 ", "\u55349 \u56465 ", "\u55349 \u56466 ", "\u55349 \u56467 ", "\u55349 \u56468 ", "\u55349 \u56469 ", "\u55349 \u56470 ", "\u55349 \u56471 ", "\u55349 \u56472 ", "\u55349 \u56473 ", "\u55349 \u56474 ", "\u55349 \u56475 ", "\u55349 \u56424 ", "\u55349 \u56425 ", "\u55349 \u56426 ", "\u55349 \u56427 ", "\u55349 \u56428 ", "\u55349 \u56429 ", "\u55349 \u56430 ", "\u55349 \u56431 ", "\u55349 \u56432 ", "\u55349 \u56433 ", "\u55349 \u56434 ", "\u55349 \u56435 ", "\u55351 \u56589 ", "\u55349 \u56437 ", "\u55349 \u56438 ", "\u55349 \u56439 ", "\u55349 \u56440 ", "\u55349 \u56441 ", "\u55349 \u56442 ", "\u55349 \u56443 ", "\u55349 \u56444 ", "\u55349 \u56445 ", "\u55349 \u56446 ", "\u55349 \u56447 ", "\u55349 \u56448 ", "\u55349 \u56449 "],\
        "sans-serif-regular": ["\uc0\u55349 \u57314 ", "\u55349 \u57315 ", "\u55349 \u57316 ", "\u55349 \u57317 ", "\u55349 \u57318 ", "\u55349 \u57319 ", "\u55349 \u57320 ", "\u55349 \u57321 ", "\u55349 \u57322 ", "\u55349 \u57323 ", "\u55349 \u56762 ", "\u55349 \u56763 ", "\u55349 \u56764 ", "\u55349 \u56765 ", "\u55349 \u56766 ", "\u55349 \u56767 ", "\u55349 \u56768 ", "\u55349 \u56769 ", "\u55349 \u56770 ", "\u55349 \u56771 ", "\u55349 \u56772 ", "\u55349 \u56773 ", "\u55349 \u56774 ", "\u55349 \u56775 ", "\u55349 \u56776 ", "\u55349 \u56777 ", "\u55349 \u56778 ", "\u55349 \u56779 ", "\u55349 \u56780 ", "\u55349 \u56781 ", "\u55349 \u56782 ", "\u55349 \u56783 ", "\u55349 \u56784 ", "\u55349 \u56785 ", "\u55349 \u56786 ", "\u55349 \u56787 ", "\u55349 \u56736 ", "\u55349 \u56737 ", "\u55349 \u56738 ", "\u55349 \u56739 ", "\u55349 \u56740 ", "\u55349 \u56741 ", "\u55349 \u56742 ", "\u55349 \u56743 ", "\u55349 \u56744 ", "\u55349 \u56745 ", "\u55349 \u56746 ", "\u55349 \u56747 ", "\u55349 \u56748 ", "\u55349 \u56749 ", "\u55349 \u56750 ", "\u55349 \u56751 ", "\u55349 \u56752 ", "\u55349 \u56753 ", "\u55349 \u56754 ", "\u55349 \u56755 ", "\u55349 \u56756 ", "\u55349 \u56757 ", "\u55349 \u56758 ", "\u55349 \u56759 ", "\u55349 \u56760 ", "\u55349 \u56761 "],\
        "sans-serif-bold": ["\uc0\u55349 \u57324 ", "\u55349 \u57325 ", "\u55349 \u57326 ", "\u55349 \u57327 ", "\u55349 \u57328 ", "\u55349 \u57329 ", "\u55349 \u57330 ", "\u55349 \u57331 ", "\u55349 \u57332 ", "\u55349 \u57333 ", "\u55349 \u56814 ", "\u55349 \u56815 ", "\u55349 \u56816 ", "\u55349 \u56817 ", "\u55349 \u56818 ", "\u55349 \u56819 ", "\u55349 \u56820 ", "\u55349 \u56821 ", "\u55349 \u56822 ", "\u55349 \u56823 ", "\u55349 \u56824 ", "\u55349 \u56825 ", "\u55349 \u56826 ", "\u55349 \u56827 ", "\u55349 \u56828 ", "\u55349 \u56829 ", "\u55349 \u56830 ", "\u55349 \u56831 ", "\u55349 \u56832 ", "\u55349 \u56833 ", "\u55349 \u56834 ", "\u55349 \u56835 ", "\u55349 \u56836 ", "\u55349 \u56837 ", "\u55349 \u56838 ", "\u55349 \u56839 ", "\u55349 \u56788 ", "\u55349 \u56789 ", "\u55349 \u56790 ", "\u55349 \u56791 ", "\u55349 \u56792 ", "\u55349 \u56793 ", "\u55349 \u56794 ", "\u55349 \u56795 ", "\u55349 \u56796 ", "\u55349 \u56797 ", "\u55349 \u56798 ", "\u55349 \u56799 ", "\u55349 \u56800 ", "\u55349 \u56801 ", "\u55349 \u56802 ", "\u55349 \u56803 ", "\u55349 \u56804 ", "\u55349 \u56805 ", "\u55349 \u56806 ", '\u55349 \u56807 ', "\u55349 \u56808 ", "\u55349 \u56809 ", "\u55349 \u56810 ", "\u55349 \u56811 ", "\u55349 \u56812 ", "\u55349 \u56813 "],\
        "sans-serif-italic": ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "\uc0\u55349 \u56866 ", "\u55349 \u56867 ", "\u55349 \u56868 ", "\u55349 \u56869 ", "\u55349 \u56870 ", "\u55349 \u56871 ", "\u55349 \u56872 ", "\u55349 \u56873 ", "\u55349 \u56874 ", "\u55349 \u56875 ", "\u55349 \u56876 ", "\u55349 \u56877 ", "\u55349 \u56878 ", "\u55349 \u56879 ", "\u55349 \u56880 ", "\u55349 \u56881 ", "\u55349 \u56882 ", "\u55349 \u56883 ", "\u55349 \u56884 ", "\u55349 \u56885 ", "\u55349 \u56886 ", "\u55349 \u56887 ", "\u55349 \u56888 ", "\u55349 \u56889 ", "\u55349 \u56890 ", "\u55349 \u56891 ", "\u55349 \u56840 ", "\u55349 \u56841 ", "\u55349 \u56842 ", "\u55349 \u56843 ", "\u55349 \u56844 ", "\u55349 \u56845 ", "\u55349 \u56846 ", "\u55349 \u56847 ", "\u55349 \u56848 ", "\u55349 \u56849 ", "\u55349 \u56850 ", "\u55349 \u56851 ", "\u55349 \u56852 ", "\u55349 \u56853 ", "\u55349 \u56854 ", "\u55349 \u56855 ", "\u55349 \u56856 ", "\u55349 \u56857 ", "\u55349 \u56858 ", "\u55349 \u56859 ", "\u55349 \u56860 ", "\u55349 \u56861 ", "\u55349 \u56862 ", "\u55349 \u56863 ", "\u55349 \u56864 ", "\u55349 \u56865 "],\
        "sans-serif-bold-italic": ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "\uc0\u55349 \u56918 ", "\u55349 \u56919 ", "\u55349 \u56920 ", "\u55349 \u56921 ", "\u55349 \u56922 ", "\u55349 \u56923 ", "\u55349 \u56924 ", "\u55349 \u56925 ", "\u55349 \u56926 ", "\u55349 \u56927 ", "\u55349 \u56928 ", "\u55349 \u56929 ", "\u55349 \u56930 ", "\u55349 \u56931 ", "\u55349 \u56932 ", "\u55349 \u56933 ", "\u55349 \u56934 ", "\u55349 \u56935 ", "\u55349 \u56936 ", "\u55349 \u56937 ", "\u55349 \u56938 ", "\u55349 \u56939 ", "\u55349 \u56940 ", "\u55349 \u56941 ", "\u55349 \u56942 ", "\u55349 \u56943 ", "\u55349 \u56892 ", "\u55349 \u56893 ", "\u55349 \u56894 ", "\u55349 \u56895 ", "\u55349 \u56896 ", "\u55349 \u56897 ", "\u55349 \u56898 ", "\u55349 \u56899 ", "\u55349 \u56900 ", "\u55349 \u56901 ", "\u55349 \u56902 ", "\u55349 \u56903 ", "\u55349 \u56904 ", "\u55349 \u56905 ", "\u55349 \u56906 ", "\u55349 \u56907 ", "\u55349 \u56908 ", "\u55349 \u56909 ", "\u55349 \u56910 ", "\u55349 \u56911 ", "\u55349 \u56912 ", "\u55349 \u56913 ", "\u55349 \u56914 ", "\u55349 \u56915 ", "\u55349 \u56916 ", "\u55349 \u56917 "],\
        "script-regular": ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "\uc0\u55349 \u56502 ", "\u55349 \u56503 ", "\u55349 \u56504 ", "\u55349 \u56505 ", "\u8495 ", "\u55349 \u56507 ", "\u8458 ", "\u55349 \u56509 ", "\u55349 \u56510 ", "\u55349 \u56511 ", "\u55349 \u56512 ", "\u55349 \u56513 ", "\u55349 \u56514 ", "\u55349 \u56515 ", "\u8500 ", "\u55349 \u56517 ", "\u55349 \u56518 ", "\u55349 \u56519 ", "\u55349 \u56520 ", "\u55349 \u56521 ", "\u55349 \u56522 ", "\u55349 \u56523 ", "\u55349 \u56524 ", "\u55349 \u56525 ", "\u55349 \u56526 ", "\u55349 \u56527 ", "\u55349 \u56476 ", "\u8492 ", "\u55349 \u56478 ", "\u55349 \u56479 ", "\u8496 ", "\u8497 ", "\u55349 \u56482 ", "\u8459 ", "\u8464 ", "\u55349 \u56485 ", "\u55349 \u56486 ", "\u8466 ", "\u8499 ", "\u55349 \u56489 ", "\u55349 \u56490 ", "\u55349 \u56491 ", "\u55349 \u56492 ", "\u8475 ", "\u55349 \u56494 ", "\u55349 \u56495 ", "\u55349 \u56496 ", "\u55349 \u56497 ", "\u55349 \u56498 ", "\u55349 \u56499 ", "\u55349 \u56500 ", "\u55349 \u56501 "],\
        "script-bold": ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "\uc0\u55349 \u56554 ", "\u55349 \u56555 ", "\u55349 \u56556 ", "\u55349 \u56557 ", "\u55349 \u56558 ", "\u55349 \u56559 ", "\u55349 \u56560 ", "\u55349 \u56561 ", "\u55349 \u56562 ", "\u55349 \u56563 ", "\u55349 \u56564 ", "\u55349 \u56565 ", "\u55349 \u56566 ", "\u55349 \u56567 ", "\u55349 \u56568 ", "\u55349 \u56569 ", "\u55349 \u56570 ", "\u55349 \u56571 ", "\u55349 \u56572 ", "\u55349 \u56573 ", "\u55349 \u56574 ", "\u55349 \u56575 ", "\u55349 \u56576 ", "\u55349 \u56577 ", "\u55349 \u56578 ", "\u55349 \u56579 ", "\u55349 \u56528 ", "\u55349 \u56529 ", "\u55349 \u56530 ", "\u55349 \u56531 ", "\u55349 \u56532 ", "\u55349 \u56533 ", "\u55349 \u56534 ", "\u55349 \u56535 ", "\u55349 \u56536 ", "\u55349 \u56537 ", "\u55349 \u56538 ", "\u55349 \u56539 ", "\u55349 \u56540 ", "\u55349 \u56541 ", "\u55349 \u56542 ", "\u55349 \u56543 ", "\u55349 \u56544 ", "\u55349 \u56545 ", "\u55349 \u56546 ", "\u55349 \u56547 ", "\u55349 \u56548 ", "\u55349 \u56549 ", "\u55349 \u56550 ", "\u55349 \u56551 ", "\u55349 \u56552 ", "\u55349 \u56553 "],\
        "fraktur-regular": ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "\uc0\u55349 \u56606 ", "\u55349 \u56607 ", "\u55349 \u56608 ", "\u55349 \u56609 ", "\u55349 \u56610 ", "\u55349 \u56611 ", "\u55349 \u56612 ", "\u55349 \u56613 ", "\u55349 \u56614 ", "\u55349 \u56615 ", "\u55349 \u56616 ", "\u55349 \u56617 ", "\u55349 \u56618 ", "\u55349 \u56619 ", "\u55349 \u56620 ", "\u55349 \u56621 ", "\u55349 \u56622 ", "\u55349 \u56623 ", "\u55349 \u56624 ", "\u55349 \u56625 ", "\u55349 \u56626 ", "\u55349 \u56627 ", "\u55349 \u56628 ", "\u55349 \u56629 ", "\u55349 \u56630 ", "\u55349 \u56631 ", "\u55349 \u56580 ", "\u55349 \u56581 ", "\u8493 ", "\u55349 \u56583 ", "\u55349 \u56584 ", "\u55349 \u56585 ", "\u55349 \u56586 ", "\u8460 ", "\u8465 ", "\u55349 \u56589 ", "\u55349 \u56590 ", "\u55349 \u56591 ", "\u55349 \u56592 ", "\u55349 \u56593 ", "\u55349 \u56594 ", "\u55349 \u56595 ", "\u55349 \u56596 ", "\u8476 ", "\u55349 \u56598 ", "\u55349 \u56599 ", "\u55349 \u56600 ", "\u55349 \u56601 ", "\u55349 \u56602 ", "\u55349 \u56603 ", "\u55349 \u56604 ", "\u8488 "],\
        "fraktur-bold": ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "\uc0\u55349 \u56710 ", "\u55349 \u56711 ", "\u55349 \u56712 ", "\u55349 \u56713 ", "\u55349 \u56714 ", "\u55349 \u56715 ", "\u55349 \u56716 ", "\u55349 \u56717 ", "\u55349 \u56718 ", "\u55349 \u56719 ", "\u55349 \u56720 ", "\u55349 \u56721 ", "\u55349 \u56722 ", "\u55349 \u56723 ", "\u55349 \u56724 ", "\u55349 \u56725 ", "\u55349 \u56726 ", "\u55349 \u56727 ", "\u55349 \u56728 ", "\u55349 \u56729 ", "\u55349 \u56730 ", "\u55349 \u56731 ", "\u55349 \u56732 ", "\u55349 \u56733 ", "\u55349 \u56734 ", "\u55349 \u56735 ", "\u55349 \u56684 ", "\u55349 \u56685 ", "\u55349 \u56686 ", "\u55349 \u56687 ", "\u55349 \u56688 ", "\u55349 \u56689 ", "\u55349 \u56690 ", "\u55349 \u56691 ", "\u55349 \u56692 ", "\u55349 \u56693 ", "\u55349 \u56694 ", "\u55349 \u56695 ", "\u55349 \u56696 ", "\u55349 \u56697 ", "\u55349 \u56698 ", "\u55349 \u56699 ", "\u55349 \u56700 ", "\u55349 \u56701 ", "\u55349 \u56702 ", "\u55349 \u56703 ", "\u55349 \u56704 ", "\u55349 \u56705 ", "\u55349 \u56706 ", "\u55349 \u56707 ", "\u55349 \u56708 ", "\u55349 \u56709 "],\
        "monospace-regular": ["\uc0\u55349 \u57334 ", "\u55349 \u57335 ", "\u55349 \u57336 ", "\u55349 \u57337 ", "\u55349 \u57338 ", "\u55349 \u57339 ", "\u55349 \u57340 ", "\u55349 \u57341 ", "\u55349 \u57342 ", "\u55349 \u57343 ", "\u55349 \u56970 ", "\u55349 \u56971 ", "\u55349 \u56972 ", "\u55349 \u56973 ", "\u55349 \u56974 ", "\u55349 \u56975 ", "\u55349 \u56976 ", "\u55349 \u56977 ", "\u55349 \u56978 ", "\u55349 \u56979 ", "\u55349 \u56980 ", "\u55349 \u56981 ", "\u55349 \u56982 ", "\u55349 \u56983 ", "\u55349 \u56984 ", "\u55349 \u56985 ", "\u55349 \u56986 ", "\u55349 \u56987 ", "\u55349 \u56988 ", "\u55349 \u56989 ", "\u55349 \u56990 ", "\u55349 \u56991 ", "\u55349 \u56992 ", "\u55349 \u56993 ", "\u55349 \u56994 ", "\u55349 \u56995 ", "\u55349 \u56944 ", "\u55349 \u56945 ", "\u55349 \u56946 ", "\u55349 \u56947 ", "\u55349 \u56948 ", "\u55349 \u56949 ", "\u55349 \u56950 ", "\u55349 \u56951 ", "\u55349 \u56952 ", "\u55349 \u56953 ", "\u55349 \u56954 ", "\u55349 \u56955 ", "\u55349 \u56956 ", "\u55349 \u56957 ", "\u55349 \u56958 ", "\u55349 \u56959 ", "\u55349 \u56960 ", "\u55349 \u56961 ", "\u55349 \u56962 ", "\u55349 \u56963 ", "\u55349 \u56964 ", "\u55349 \u56965 ", "\u55349 \u56966 ", "\u55349 \u56967 ", "\u55349 \u56968 ", "\u55349 \u56969 "],\
        "double-struck-bold": ["\uc0\u55349 \u57304 ", "\u55349 \u57305 ", "\u55349 \u57306 ", "\u55349 \u57307 ", "\u55349 \u57308 ", "\u55349 \u57309 ", "\u55349 \u57310 ", "\u55349 \u57311 ", "\u55349 \u57312 ", "\u55349 \u57313 ", "\u55349 \u56658 ", "\u55349 \u56659 ", "\u55349 \u56660 ", "\u55349 \u56661 ", "\u55349 \u56662 ", "\u55349 \u56663 ", "\u55349 \u56664 ", "\u55349 \u56665 ", "\u55349 \u56666 ", "\u55349 \u56667 ", "\u55349 \u56668 ", "\u55349 \u56669 ", "\u55349 \u56670 ", "\u55349 \u56671 ", "\u55349 \u56672 ", "\u55349 \u56673 ", "\u55349 \u56674 ", "\u55349 \u56675 ", "\u55349 \u56676 ", "\u55349 \u56677 ", "\u55349 \u56678 ", "\u55349 \u56679 ", "\u55349 \u56680 ", "\u55349 \u56681 ", "\u55349 \u56682 ", "\u55349 \u56683 ", "\u55349 \u56632 ", "\u55349 \u56633 ", "\u8450 ", "\u55349 \u56635 ", "\u55349 \u56636 ", "\u55349 \u56637 ", "\u55349 \u56638 ", "\u8461 ", "\u55349 \u56640 ", "\u55349 \u56641 ", "\u55349 \u56642 ", "\u55349 \u56643 ", "\u55349 \u56644 ", "\u8469 ", "\u55349 \u56646 ", "\u8473 ", "\u8474 ", "\u8477 ", "\u55349 \u56650 ", "\u55349 \u56651 ", "\u55349 \u56652 ", "\u55349 \u56653 ", "\u55349 \u56654 ", "\u55349 \u56655 ", "\u55349 \u56656 ", "\u8484 "],\
        "circle-regular": ["\uc0\u9450 ", "\u9312 ", "\u9313 ", "\u9314 ", "\u9315 ", "\u9316 ", "\u9317 ", "\u9318 ", "\u9319 ", "\u9320 ", "\u9424 ", "\u9425 ", "\u9426 ", "\u9427 ", "\u9428 ", "\u9429 ", "\u9430 ", "\u9431 ", "\u9432 ", "\u9433 ", "\u9434 ", "\u9435 ", "\u9436 ", "\u9437 ", "\u9438 ", "\u9439 ", "\u9440 ", "\u9441 ", "\u9442 ", "\u9443 ", "\u9444 ", "\u9445 ", "\u9446 ", "\u9447 ", "\u9448 ", "\u9449 ", "\u9398 ", "\u9399 ", "\u9400 ", "\u9401 ", "\u9402 ", "\u9403 ", "\u9404 ", "\u9405 ", "\u9406 ", "\u9407 ", "\u9408 ", "\u9409 ", "\u9410 ", "\u9411 ", "\u9412 ", "\u9413 ", "\u9414 ", "\u9415 ", "\u9416 ", "\u9417 ", "\u9418 ", "\u9419 ", "\u9420 ", "\u9421 ", "\u9422 ", "\u9423 "],\
        "square-regular": ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "\uc0\u55356 \u56624 ", "\u55356 \u56625 ", "\u55356 \u56626 ", "\u55356 \u56627 ", "\u55356 \u56628 ", "\u55356 \u56629 ", "\u55356 \u56630 ", "\u55356 \u56631 ", "\u55356 \u56632 ", "\u55356 \u56633 ", "\u55356 \u56634 ", "\u55356 \u56635 ", "\u55356 \u56636 ", "\u55356 \u56637 ", "\u55356 \u56638 ", "\u55356 \u56639 ", "\u55356 \u56640 ", "\u55356 \u56641 ", "\u55356 \u56642 ", "\u55356 \u56643 ", "\u55356 \u56644 ", "\u55356 \u56645 ", "\u55356 \u56646 ", "\u55356 \u56647 ", "\u55356 \u56648 ", "\u55356 \u56649 ", "\u55356 \u56624 ", "\u55356 \u56625 ", "\u55356 \u56626 ", "\u55356 \u56627 ", "\u55356 \u56628 ", "\u55356 \u56629 ", "\u55356 \u56630 ", "\u55356 \u56631 ", "\u55356 \u56632 ", "\u55356 \u56633 ", "\u55356 \u56634 ", "\u55356 \u56635 ", "\u55356 \u56636 ", "\u55356 \u56637 ", "\u55356 \u56638 ", "\u55356 \u56639 ", "\u55356 \u56640 ", "\u55356 \u56641 ", "\u55356 \u56642 ", "\u55356 \u56643 ", "\u55356 \u56644 ", "\u55356 \u56645 ", "\u55356 \u56646 ", "\u55356 \u56647 ", "\u55356 \u56648 ", "\u55356 \u56649 "],\
        "modifier-letter": ["\uc0\u8304 ", "\'b9", "\'b2", "\'b3", "\u8308 ", "\u8309 ", "\u8310 ", "\u8311 ", "\u8312 ", "\u8313 ", "\u7491 ", "\u7495 ", "\u7580 ", "\u7496 ", "\u7497 ", "\u7584 ", "\u7501 ", "\u688 ", "\u8305 ", "\u690 ", "\u7503 ", "\u737 ", "\u7504 ", "\u8319 ", "\u7506 ", "\u7510 ", "\u7520 ", "\u691 ", "\u738 ", "\u7511 ", "\u7512 ", "\u7515 ", "\u695 ", "\u739 ", "\u696 ", "\u7611 ", "\u7468 ", "\u7470 ", "\u7580 ", "\u7472 ", "\u7473 ", "\u7584 ", "\u7475 ", "\u688 ", "\u7477 ", "\u7478 ", "\u7479 ", "\u7480 ", "\u7481 ", "\u7482 ", "\u7484 ", "\u7486 ", "\u7520 ", "\u7487 ", "\u738 ", "\u7488 ", "\u7489 ", "\u7515 ", "\u7490 ", "\u739 ", "\u696 ", "\u7611 "],\
    \};\
\
    // charCode => index in `TABLE`\
    const INDEX = \{ "48": 0, "49": 1, "50": 2, "51": 3, "52": 4, "53": 5, "54": 6, "55": 7, "56": 8, "57": 9, "65": 36, "66": 37, "67": 38, "68": 39, "69": 40, "70": 41, "71": 42, "72": 43, "73": 44, "74": 45, "75": 46, "76": 47, "77": 48, "78": 49, "79": 50, "80": 51, "81": 52, "82": 53, "83": 54, "84": 55, "85": 56, "86": 57, "87": 58, "88": 59, "89": 60, "90": 61, "97": 10, "98": 11, "99": 12, "100": 13, "101": 14, "102": 15, "103": 16, "104": 17, "105": 18, "106": 19, "107": 20, "108": 21, "109": 22, "110": 23, "111": 24, "112": 25, "113": 26, "114": 27, "115": 28, "116": 29, "117": 30, "118": 31, "119": 32, "120": 33, "121": 34, "122": 35 \};\
\
    return proxies.map(p => \{\
        p.name = [...p.name].map(c => \{\
            if (/[a-zA-Z0-9]/.test(c)) \{\
                const code = c.charCodeAt(0);\
                const index = INDEX[code];\
                if (isNumber(code) && num) \{\
                    return TABLE[num][index];\
                \} else \{\
                    return TABLE[type][index];\
                \}\
            \}\
            return c;\
        \}).join("");\
        return p;\
    \})\
\}\
\
function isNumber(code) \{ return code >= 48 && code <= 57; \}\
\
// \uc0\u21028 \u26029 \u26159 \u21542 \u26159 \u33457 \u37324 \u32993 \u21736 \u23383 \u20307 \u25805 \u20316 \
if ($arguments.type) \{\
    // \uc0\u22914 \u26524 \u26159 \u65292 \u21017 \u23548 \u20986 \u33457 \u37324 \u32993 \u21736 \u23383 \u20307 \u25805 \u20316 \u20989 \u25968 \
    $done(\{ operators: [fancyCharOperator] \});\
\} else \{\
    // \uc0\u21542 \u21017 \u65292 \u23548 \u20986 \u37325 \u21629 \u21517 \u25805 \u20316 \u20989 \u25968 \
    $done(\{ operators: [operator] \});\
\}\
```}